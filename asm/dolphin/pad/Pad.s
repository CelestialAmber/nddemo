.include "macros.inc"

.section .text, "ax"  # 0x800065A0 - 0x80063CE0 ; 0x0005D740

.fn UpdateOrigin, local
/* 80035B60 00031AE0  7C 08 02 A6 */	mflr r0
/* 80035B64 00031AE4  3C A0 80 08 */	lis r5, Origin@ha
/* 80035B68 00031AE8  90 01 00 04 */	stw r0, 0x4(r1)
/* 80035B6C 00031AEC  1C C3 00 0C */	mulli r6, r3, 0xc
/* 80035B70 00031AF0  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 80035B74 00031AF4  38 A5 10 A0 */	addi r5, r5, Origin@l
/* 80035B78 00031AF8  93 E1 00 14 */	stw r31, 0x14(r1)
/* 80035B7C 00031AFC  7F E5 32 14 */	add r31, r5, r6
/* 80035B80 00031B00  80 0D 82 70 */	lwz r0, AnalogMode@sda21(r13)
/* 80035B84 00031B04  54 04 05 6E */	rlwinm r4, r0, 0, 21, 23
/* 80035B88 00031B08  2C 04 04 00 */	cmpwi r4, 0x400
/* 80035B8C 00031B0C  3C 00 80 00 */	lis r0, 0x8000
/* 80035B90 00031B10  7C 00 1C 30 */	srw r0, r0, r3
/* 80035B94 00031B14  41 82 00 F4 */	beq .L_80035C88
/* 80035B98 00031B18  40 80 00 34 */	bge .L_80035BCC
/* 80035B9C 00031B1C  2C 04 02 00 */	cmpwi r4, 0x200
/* 80035BA0 00031B20  41 82 00 B8 */	beq .L_80035C58
/* 80035BA4 00031B24  40 80 00 1C */	bge .L_80035BC0
/* 80035BA8 00031B28  2C 04 01 00 */	cmpwi r4, 0x100
/* 80035BAC 00031B2C  41 82 00 78 */	beq .L_80035C24
/* 80035BB0 00031B30  40 80 00 D8 */	bge .L_80035C88
/* 80035BB4 00031B34  2C 04 00 00 */	cmpwi r4, 0x0
/* 80035BB8 00031B38  41 82 00 38 */	beq .L_80035BF0
/* 80035BBC 00031B3C  48 00 00 CC */	b .L_80035C88
.L_80035BC0:
/* 80035BC0 00031B40  2C 04 03 00 */	cmpwi r4, 0x300
/* 80035BC4 00031B44  41 82 00 C4 */	beq .L_80035C88
/* 80035BC8 00031B48  48 00 00 C0 */	b .L_80035C88
.L_80035BCC:
/* 80035BCC 00031B4C  2C 04 06 00 */	cmpwi r4, 0x600
/* 80035BD0 00031B50  41 82 00 20 */	beq .L_80035BF0
/* 80035BD4 00031B54  40 80 00 10 */	bge .L_80035BE4
/* 80035BD8 00031B58  2C 04 05 00 */	cmpwi r4, 0x500
/* 80035BDC 00031B5C  41 82 00 14 */	beq .L_80035BF0
/* 80035BE0 00031B60  48 00 00 A8 */	b .L_80035C88
.L_80035BE4:
/* 80035BE4 00031B64  2C 04 07 00 */	cmpwi r4, 0x700
/* 80035BE8 00031B68  41 82 00 08 */	beq .L_80035BF0
/* 80035BEC 00031B6C  48 00 00 9C */	b .L_80035C88
.L_80035BF0:
/* 80035BF0 00031B70  88 9F 00 06 */	lbz r4, 0x6(r31)
/* 80035BF4 00031B74  54 84 00 36 */	clrrwi r4, r4, 4
/* 80035BF8 00031B78  98 9F 00 06 */	stb r4, 0x6(r31)
/* 80035BFC 00031B7C  88 9F 00 07 */	lbz r4, 0x7(r31)
/* 80035C00 00031B80  54 84 00 36 */	clrrwi r4, r4, 4
/* 80035C04 00031B84  98 9F 00 07 */	stb r4, 0x7(r31)
/* 80035C08 00031B88  88 9F 00 08 */	lbz r4, 0x8(r31)
/* 80035C0C 00031B8C  54 84 00 36 */	clrrwi r4, r4, 4
/* 80035C10 00031B90  98 9F 00 08 */	stb r4, 0x8(r31)
/* 80035C14 00031B94  88 9F 00 09 */	lbz r4, 0x9(r31)
/* 80035C18 00031B98  54 84 00 36 */	clrrwi r4, r4, 4
/* 80035C1C 00031B9C  98 9F 00 09 */	stb r4, 0x9(r31)
/* 80035C20 00031BA0  48 00 00 68 */	b .L_80035C88
.L_80035C24:
/* 80035C24 00031BA4  88 9F 00 04 */	lbz r4, 0x4(r31)
/* 80035C28 00031BA8  54 84 00 36 */	clrrwi r4, r4, 4
/* 80035C2C 00031BAC  98 9F 00 04 */	stb r4, 0x4(r31)
/* 80035C30 00031BB0  88 9F 00 05 */	lbz r4, 0x5(r31)
/* 80035C34 00031BB4  54 84 00 36 */	clrrwi r4, r4, 4
/* 80035C38 00031BB8  98 9F 00 05 */	stb r4, 0x5(r31)
/* 80035C3C 00031BBC  88 9F 00 08 */	lbz r4, 0x8(r31)
/* 80035C40 00031BC0  54 84 00 36 */	clrrwi r4, r4, 4
/* 80035C44 00031BC4  98 9F 00 08 */	stb r4, 0x8(r31)
/* 80035C48 00031BC8  88 9F 00 09 */	lbz r4, 0x9(r31)
/* 80035C4C 00031BCC  54 84 00 36 */	clrrwi r4, r4, 4
/* 80035C50 00031BD0  98 9F 00 09 */	stb r4, 0x9(r31)
/* 80035C54 00031BD4  48 00 00 34 */	b .L_80035C88
.L_80035C58:
/* 80035C58 00031BD8  88 9F 00 04 */	lbz r4, 0x4(r31)
/* 80035C5C 00031BDC  54 84 00 36 */	clrrwi r4, r4, 4
/* 80035C60 00031BE0  98 9F 00 04 */	stb r4, 0x4(r31)
/* 80035C64 00031BE4  88 9F 00 05 */	lbz r4, 0x5(r31)
/* 80035C68 00031BE8  54 84 00 36 */	clrrwi r4, r4, 4
/* 80035C6C 00031BEC  98 9F 00 05 */	stb r4, 0x5(r31)
/* 80035C70 00031BF0  88 9F 00 06 */	lbz r4, 0x6(r31)
/* 80035C74 00031BF4  54 84 00 36 */	clrrwi r4, r4, 4
/* 80035C78 00031BF8  98 9F 00 06 */	stb r4, 0x6(r31)
/* 80035C7C 00031BFC  88 9F 00 07 */	lbz r4, 0x7(r31)
/* 80035C80 00031C00  54 84 00 36 */	clrrwi r4, r4, 4
/* 80035C84 00031C04  98 9F 00 07 */	stb r4, 0x7(r31)
.L_80035C88:
/* 80035C88 00031C08  88 9F 00 02 */	lbz r4, 0x2(r31)
/* 80035C8C 00031C0C  38 84 FF 80 */	addi r4, r4, -0x80
/* 80035C90 00031C10  98 9F 00 02 */	stb r4, 0x2(r31)
/* 80035C94 00031C14  88 9F 00 03 */	lbz r4, 0x3(r31)
/* 80035C98 00031C18  38 84 FF 80 */	addi r4, r4, -0x80
/* 80035C9C 00031C1C  98 9F 00 03 */	stb r4, 0x3(r31)
/* 80035CA0 00031C20  88 9F 00 04 */	lbz r4, 0x4(r31)
/* 80035CA4 00031C24  38 84 FF 80 */	addi r4, r4, -0x80
/* 80035CA8 00031C28  98 9F 00 04 */	stb r4, 0x4(r31)
/* 80035CAC 00031C2C  88 9F 00 05 */	lbz r4, 0x5(r31)
/* 80035CB0 00031C30  38 84 FF 80 */	addi r4, r4, -0x80
/* 80035CB4 00031C34  98 9F 00 05 */	stb r4, 0x5(r31)
/* 80035CB8 00031C38  80 8D 82 6C */	lwz r4, XPatchBits@sda21(r13)
/* 80035CBC 00031C3C  7C 80 00 39 */	and. r0, r4, r0
/* 80035CC0 00031C40  41 82 00 30 */	beq .L_80035CF0
/* 80035CC4 00031C44  88 1F 00 02 */	lbz r0, 0x2(r31)
/* 80035CC8 00031C48  7C 00 07 74 */	extsb r0, r0
/* 80035CCC 00031C4C  2C 00 00 40 */	cmpwi r0, 0x40
/* 80035CD0 00031C50  40 81 00 20 */	ble .L_80035CF0
/* 80035CD4 00031C54  4B FF 82 15 */	bl SIGetType
/* 80035CD8 00031C58  54 63 00 1E */	clrrwi r3, r3, 16
/* 80035CDC 00031C5C  3C 03 F7 00 */	addis r0, r3, 0xf700
/* 80035CE0 00031C60  28 00 00 00 */	cmplwi r0, 0x0
/* 80035CE4 00031C64  40 82 00 0C */	bne .L_80035CF0
/* 80035CE8 00031C68  38 00 00 00 */	li r0, 0x0
/* 80035CEC 00031C6C  98 1F 00 02 */	stb r0, 0x2(r31)
.L_80035CF0:
/* 80035CF0 00031C70  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 80035CF4 00031C74  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 80035CF8 00031C78  38 21 00 18 */	addi r1, r1, 0x18
/* 80035CFC 00031C7C  7C 08 03 A6 */	mtlr r0
/* 80035D00 00031C80  4E 80 00 20 */	blr
.endfn UpdateOrigin

.fn PADOriginCallback, local
/* 80035D04 00031C84  7C 08 02 A6 */	mflr r0
/* 80035D08 00031C88  90 01 00 04 */	stw r0, 0x4(r1)
/* 80035D0C 00031C8C  54 80 07 3F */	clrlwi. r0, r4, 28
/* 80035D10 00031C90  94 21 FF D0 */	stwu r1, -0x30(r1)
/* 80035D14 00031C94  93 E1 00 2C */	stw r31, 0x2c(r1)
/* 80035D18 00031C98  40 82 00 48 */	bne .L_80035D60
/* 80035D1C 00031C9C  80 6D 82 68 */	lwz r3, ResettingChan@sda21(r13)
/* 80035D20 00031CA0  4B FF FE 41 */	bl UpdateOrigin
/* 80035D24 00031CA4  83 ED 82 68 */	lwz r31, ResettingChan@sda21(r13)
/* 80035D28 00031CA8  3C 00 80 00 */	lis r0, 0x8000
/* 80035D2C 00031CAC  80 6D 86 04 */	lwz r3, EnabledBits@sda21(r13)
/* 80035D30 00031CB0  38 81 00 1C */	addi r4, r1, 0x1c
/* 80035D34 00031CB4  7C 00 FC 30 */	srw r0, r0, r31
/* 80035D38 00031CB8  7C 60 03 78 */	or r0, r3, r0
/* 80035D3C 00031CBC  90 0D 86 04 */	stw r0, EnabledBits@sda21(r13)
/* 80035D40 00031CC0  7F E3 FB 78 */	mr r3, r31
/* 80035D44 00031CC4  4B FF 7C 45 */	bl SIGetResponse
/* 80035D48 00031CC8  80 0D 82 70 */	lwz r0, AnalogMode@sda21(r13)
/* 80035D4C 00031CCC  38 7F 00 00 */	addi r3, r31, 0x0
/* 80035D50 00031CD0  64 04 00 40 */	oris r4, r0, 0x40
/* 80035D54 00031CD4  4B FF 79 61 */	bl SISetCommand
/* 80035D58 00031CD8  80 6D 86 04 */	lwz r3, EnabledBits@sda21(r13)
/* 80035D5C 00031CDC  4B FF 79 CD */	bl SIEnablePolling
.L_80035D60:
/* 80035D60 00031CE0  80 AD 86 08 */	lwz r5, ResettingBits@sda21(r13)
/* 80035D64 00031CE4  7C A0 00 34 */	cntlzw r0, r5
/* 80035D68 00031CE8  90 0D 82 68 */	stw r0, ResettingChan@sda21(r13)
/* 80035D6C 00031CEC  80 8D 82 68 */	lwz r4, ResettingChan@sda21(r13)
/* 80035D70 00031CF0  2C 04 00 20 */	cmpwi r4, 0x20
/* 80035D74 00031CF4  41 82 00 40 */	beq .L_80035DB4
/* 80035D78 00031CF8  3C 00 80 00 */	lis r0, 0x8000
/* 80035D7C 00031CFC  7C 00 24 30 */	srw r0, r0, r4
/* 80035D80 00031D00  7C A0 00 78 */	andc r0, r5, r0
/* 80035D84 00031D04  1C 84 00 0C */	mulli r4, r4, 0xc
/* 80035D88 00031D08  90 0D 86 08 */	stw r0, ResettingBits@sda21(r13)
/* 80035D8C 00031D0C  3C 60 80 08 */	lis r3, Origin@ha
/* 80035D90 00031D10  38 03 10 A0 */	addi r0, r3, Origin@l
/* 80035D94 00031D14  7C 60 22 14 */	add r3, r0, r4
/* 80035D98 00031D18  38 80 00 00 */	li r4, 0x0
/* 80035D9C 00031D1C  38 A0 00 0C */	li r5, 0xc
/* 80035DA0 00031D20  4B FC F5 8D */	bl memset
/* 80035DA4 00031D24  3C 80 80 03 */	lis r4, PADTypeAndStatusCallback@ha
/* 80035DA8 00031D28  80 6D 82 68 */	lwz r3, ResettingChan@sda21(r13)
/* 80035DAC 00031D2C  38 84 5F 60 */	addi r4, r4, PADTypeAndStatusCallback@l
/* 80035DB0 00031D30  4B FF 82 FD */	bl SIGetTypeAsync
.L_80035DB4:
/* 80035DB4 00031D34  80 01 00 34 */	lwz r0, 0x34(r1)
/* 80035DB8 00031D38  83 E1 00 2C */	lwz r31, 0x2c(r1)
/* 80035DBC 00031D3C  38 21 00 30 */	addi r1, r1, 0x30
/* 80035DC0 00031D40  7C 08 03 A6 */	mtlr r0
/* 80035DC4 00031D44  4E 80 00 20 */	blr
.endfn PADOriginCallback

.fn PADOriginUpdateCallback, local
/* 80035DC8 00031D48  7C 08 02 A6 */	mflr r0
/* 80035DCC 00031D4C  90 01 00 04 */	stw r0, 0x4(r1)
/* 80035DD0 00031D50  3C 00 80 00 */	lis r0, 0x8000
/* 80035DD4 00031D54  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 80035DD8 00031D58  93 E1 00 24 */	stw r31, 0x24(r1)
/* 80035DDC 00031D5C  3B E4 00 00 */	addi r31, r4, 0x0
/* 80035DE0 00031D60  93 C1 00 20 */	stw r30, 0x20(r1)
/* 80035DE4 00031D64  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 80035DE8 00031D68  7C 7D 1B 78 */	mr r29, r3
/* 80035DEC 00031D6C  7C 1E EC 30 */	srw r30, r0, r29
/* 80035DF0 00031D70  80 6D 86 04 */	lwz r3, EnabledBits@sda21(r13)
/* 80035DF4 00031D74  7C 60 F0 39 */	and. r0, r3, r30
/* 80035DF8 00031D78  41 82 00 74 */	beq .L_80035E6C
/* 80035DFC 00031D7C  57 E0 07 3F */	clrlwi. r0, r31, 28
/* 80035E00 00031D80  40 82 00 0C */	bne .L_80035E0C
/* 80035E04 00031D84  7F A3 EB 78 */	mr r3, r29
/* 80035E08 00031D88  4B FF FD 59 */	bl UpdateOrigin
.L_80035E0C:
/* 80035E0C 00031D8C  57 E0 07 39 */	rlwinm. r0, r31, 0, 28, 28
/* 80035E10 00031D90  41 82 00 5C */	beq .L_80035E6C
/* 80035E14 00031D94  4B FF 51 D1 */	bl OSDisableInterrupts
/* 80035E18 00031D98  3B E3 00 00 */	addi r31, r3, 0x0
/* 80035E1C 00031D9C  38 7E 00 00 */	addi r3, r30, 0x0
/* 80035E20 00031DA0  4B FF 79 A5 */	bl SIDisablePolling
/* 80035E24 00031DA4  80 CD 86 04 */	lwz r6, EnabledBits@sda21(r13)
/* 80035E28 00031DA8  7F C8 F0 F8 */	nor r8, r30, r30
/* 80035E2C 00031DAC  80 AD 86 10 */	lwz r5, WaitingBits@sda21(r13)
/* 80035E30 00031DB0  7F A3 EB 78 */	mr r3, r29
/* 80035E34 00031DB4  80 8D 86 14 */	lwz r4, CheckingBits@sda21(r13)
/* 80035E38 00031DB8  80 0D 86 18 */	lwz r0, PendingBits@sda21(r13)
/* 80035E3C 00031DBC  7C C7 40 38 */	and r7, r6, r8
/* 80035E40 00031DC0  7C A6 40 38 */	and r6, r5, r8
/* 80035E44 00031DC4  90 ED 86 04 */	stw r7, EnabledBits@sda21(r13)
/* 80035E48 00031DC8  7C 85 40 38 */	and r5, r4, r8
/* 80035E4C 00031DCC  7C 00 40 38 */	and r0, r0, r8
/* 80035E50 00031DD0  90 CD 86 10 */	stw r6, WaitingBits@sda21(r13)
/* 80035E54 00031DD4  38 80 00 00 */	li r4, 0x0
/* 80035E58 00031DD8  90 AD 86 14 */	stw r5, CheckingBits@sda21(r13)
/* 80035E5C 00031DDC  90 0D 86 18 */	stw r0, PendingBits@sda21(r13)
/* 80035E60 00031DE0  4B FF 6B E1 */	bl OSSetWirelessID
/* 80035E64 00031DE4  7F E3 FB 78 */	mr r3, r31
/* 80035E68 00031DE8  4B FF 51 A5 */	bl OSRestoreInterrupts
.L_80035E6C:
/* 80035E6C 00031DEC  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 80035E70 00031DF0  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 80035E74 00031DF4  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 80035E78 00031DF8  7C 08 03 A6 */	mtlr r0
/* 80035E7C 00031DFC  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 80035E80 00031E00  38 21 00 28 */	addi r1, r1, 0x28
/* 80035E84 00031E04  4E 80 00 20 */	blr
.endfn PADOriginUpdateCallback

.fn PADProbeCallback, local
/* 80035E88 00031E08  7C 08 02 A6 */	mflr r0
/* 80035E8C 00031E0C  90 01 00 04 */	stw r0, 0x4(r1)
/* 80035E90 00031E10  54 80 07 3F */	clrlwi. r0, r4, 28
/* 80035E94 00031E14  94 21 FF D0 */	stwu r1, -0x30(r1)
/* 80035E98 00031E18  93 E1 00 2C */	stw r31, 0x2c(r1)
/* 80035E9C 00031E1C  93 C1 00 28 */	stw r30, 0x28(r1)
/* 80035EA0 00031E20  40 82 00 54 */	bne .L_80035EF4
/* 80035EA4 00031E24  83 CD 82 68 */	lwz r30, ResettingChan@sda21(r13)
/* 80035EA8 00031E28  3F E0 80 00 */	lis r31, 0x8000
/* 80035EAC 00031E2C  80 6D 86 04 */	lwz r3, EnabledBits@sda21(r13)
/* 80035EB0 00031E30  38 81 00 1C */	addi r4, r1, 0x1c
/* 80035EB4 00031E34  7F E0 F4 30 */	srw r0, r31, r30
/* 80035EB8 00031E38  7C 60 03 78 */	or r0, r3, r0
/* 80035EBC 00031E3C  90 0D 86 04 */	stw r0, EnabledBits@sda21(r13)
/* 80035EC0 00031E40  7F C3 F3 78 */	mr r3, r30
/* 80035EC4 00031E44  4B FF 7A C5 */	bl SIGetResponse
/* 80035EC8 00031E48  80 0D 82 70 */	lwz r0, AnalogMode@sda21(r13)
/* 80035ECC 00031E4C  38 7E 00 00 */	addi r3, r30, 0x0
/* 80035ED0 00031E50  64 04 00 40 */	oris r4, r0, 0x40
/* 80035ED4 00031E54  4B FF 77 E1 */	bl SISetCommand
/* 80035ED8 00031E58  80 6D 86 04 */	lwz r3, EnabledBits@sda21(r13)
/* 80035EDC 00031E5C  4B FF 78 4D */	bl SIEnablePolling
/* 80035EE0 00031E60  80 0D 82 68 */	lwz r0, ResettingChan@sda21(r13)
/* 80035EE4 00031E64  80 6D 86 10 */	lwz r3, WaitingBits@sda21(r13)
/* 80035EE8 00031E68  7F E0 04 30 */	srw r0, r31, r0
/* 80035EEC 00031E6C  7C 60 03 78 */	or r0, r3, r0
/* 80035EF0 00031E70  90 0D 86 10 */	stw r0, WaitingBits@sda21(r13)
.L_80035EF4:
/* 80035EF4 00031E74  80 AD 86 08 */	lwz r5, ResettingBits@sda21(r13)
/* 80035EF8 00031E78  7C A0 00 34 */	cntlzw r0, r5
/* 80035EFC 00031E7C  90 0D 82 68 */	stw r0, ResettingChan@sda21(r13)
/* 80035F00 00031E80  80 8D 82 68 */	lwz r4, ResettingChan@sda21(r13)
/* 80035F04 00031E84  2C 04 00 20 */	cmpwi r4, 0x20
/* 80035F08 00031E88  41 82 00 40 */	beq .L_80035F48
/* 80035F0C 00031E8C  3C 00 80 00 */	lis r0, 0x8000
/* 80035F10 00031E90  7C 00 24 30 */	srw r0, r0, r4
/* 80035F14 00031E94  7C A0 00 78 */	andc r0, r5, r0
/* 80035F18 00031E98  1C 84 00 0C */	mulli r4, r4, 0xc
/* 80035F1C 00031E9C  90 0D 86 08 */	stw r0, ResettingBits@sda21(r13)
/* 80035F20 00031EA0  3C 60 80 08 */	lis r3, Origin@ha
/* 80035F24 00031EA4  38 03 10 A0 */	addi r0, r3, Origin@l
/* 80035F28 00031EA8  7C 60 22 14 */	add r3, r0, r4
/* 80035F2C 00031EAC  38 80 00 00 */	li r4, 0x0
/* 80035F30 00031EB0  38 A0 00 0C */	li r5, 0xc
/* 80035F34 00031EB4  4B FC F3 F9 */	bl memset
/* 80035F38 00031EB8  3C 80 80 03 */	lis r4, PADTypeAndStatusCallback@ha
/* 80035F3C 00031EBC  80 6D 82 68 */	lwz r3, ResettingChan@sda21(r13)
/* 80035F40 00031EC0  38 84 5F 60 */	addi r4, r4, PADTypeAndStatusCallback@l
/* 80035F44 00031EC4  4B FF 81 69 */	bl SIGetTypeAsync
.L_80035F48:
/* 80035F48 00031EC8  80 01 00 34 */	lwz r0, 0x34(r1)
/* 80035F4C 00031ECC  83 E1 00 2C */	lwz r31, 0x2c(r1)
/* 80035F50 00031ED0  83 C1 00 28 */	lwz r30, 0x28(r1)
/* 80035F54 00031ED4  7C 08 03 A6 */	mtlr r0
/* 80035F58 00031ED8  38 21 00 30 */	addi r1, r1, 0x30
/* 80035F5C 00031EDC  4E 80 00 20 */	blr
.endfn PADProbeCallback

.fn PADTypeAndStatusCallback, local
/* 80035F60 00031EE0  7C 08 02 A6 */	mflr r0
/* 80035F64 00031EE4  3C C0 80 08 */	lis r6, Type@ha
/* 80035F68 00031EE8  90 01 00 04 */	stw r0, 0x4(r1)
/* 80035F6C 00031EEC  54 80 07 3F */	clrlwi. r0, r4, 28
/* 80035F70 00031EF0  94 21 FF C0 */	stwu r1, -0x40(r1)
/* 80035F74 00031EF4  93 E1 00 3C */	stw r31, 0x3c(r1)
/* 80035F78 00031EF8  3F E0 80 00 */	lis r31, 0x8000
/* 80035F7C 00031EFC  93 C1 00 38 */	stw r30, 0x38(r1)
/* 80035F80 00031F00  3B C6 10 90 */	addi r30, r6, Type@l
/* 80035F84 00031F04  93 A1 00 34 */	stw r29, 0x34(r1)
/* 80035F88 00031F08  93 81 00 30 */	stw r28, 0x30(r1)
/* 80035F8C 00031F0C  83 AD 82 68 */	lwz r29, ResettingChan@sda21(r13)
/* 80035F90 00031F10  80 AD 86 0C */	lwz r5, RecalibrateBits@sda21(r13)
/* 80035F94 00031F14  7F FC EC 30 */	srw r28, r31, r29
/* 80035F98 00031F18  7C A3 E0 78 */	andc r3, r5, r28
/* 80035F9C 00031F1C  90 6D 86 0C */	stw r3, RecalibrateBits@sda21(r13)
/* 80035FA0 00031F20  7C A5 E0 38 */	and r5, r5, r28
/* 80035FA4 00031F24  38 60 00 01 */	li r3, 0x1
/* 80035FA8 00031F28  41 82 00 54 */	beq .L_80035FFC
/* 80035FAC 00031F2C  80 8D 86 08 */	lwz r4, ResettingBits@sda21(r13)
/* 80035FB0 00031F30  7C 80 00 34 */	cntlzw r0, r4
/* 80035FB4 00031F34  90 0D 82 68 */	stw r0, ResettingChan@sda21(r13)
/* 80035FB8 00031F38  80 6D 82 68 */	lwz r3, ResettingChan@sda21(r13)
/* 80035FBC 00031F3C  2C 03 00 20 */	cmpwi r3, 0x20
/* 80035FC0 00031F40  41 82 02 AC */	beq .L_8003626C
/* 80035FC4 00031F44  1C 03 00 0C */	mulli r0, r3, 0xc
/* 80035FC8 00031F48  7F E3 1C 30 */	srw r3, r31, r3
/* 80035FCC 00031F4C  7C 84 18 78 */	andc r4, r4, r3
/* 80035FD0 00031F50  7C 7E 02 14 */	add r3, r30, r0
/* 80035FD4 00031F54  90 8D 86 08 */	stw r4, ResettingBits@sda21(r13)
/* 80035FD8 00031F58  38 80 00 00 */	li r4, 0x0
/* 80035FDC 00031F5C  38 A0 00 0C */	li r5, 0xc
/* 80035FE0 00031F60  38 63 00 10 */	addi r3, r3, 0x10
/* 80035FE4 00031F64  4B FC F3 49 */	bl memset
/* 80035FE8 00031F68  3C 80 80 03 */	lis r4, PADTypeAndStatusCallback@ha
/* 80035FEC 00031F6C  80 6D 82 68 */	lwz r3, ResettingChan@sda21(r13)
/* 80035FF0 00031F70  38 84 5F 60 */	addi r4, r4, PADTypeAndStatusCallback@l
/* 80035FF4 00031F74  4B FF 80 B9 */	bl SIGetTypeAsync
/* 80035FF8 00031F78  48 00 02 74 */	b .L_8003626C
.L_80035FFC:
/* 80035FFC 00031F7C  54 86 00 2E */	clrrwi r6, r4, 8
/* 80036000 00031F80  54 84 00 C8 */	rlwinm r4, r4, 0, 3, 4
/* 80036004 00031F84  3C 04 F8 00 */	addis r0, r4, 0xf800
/* 80036008 00031F88  57 A4 10 3A */	slwi r4, r29, 2
/* 8003600C 00031F8C  28 00 00 00 */	cmplwi r0, 0x0
/* 80036010 00031F90  7C DE 21 2E */	stwx r6, r30, r4
/* 80036014 00031F94  40 82 00 0C */	bne .L_80036020
/* 80036018 00031F98  54 C0 01 CF */	rlwinm. r0, r6, 0, 7, 7
/* 8003601C 00031F9C  40 82 00 58 */	bne .L_80036074
.L_80036020:
/* 80036020 00031FA0  80 AD 86 08 */	lwz r5, ResettingBits@sda21(r13)
/* 80036024 00031FA4  7C A0 00 34 */	cntlzw r0, r5
/* 80036028 00031FA8  90 0D 82 68 */	stw r0, ResettingChan@sda21(r13)
/* 8003602C 00031FAC  80 8D 82 68 */	lwz r4, ResettingChan@sda21(r13)
/* 80036030 00031FB0  2C 04 00 20 */	cmpwi r4, 0x20
/* 80036034 00031FB4  41 82 02 38 */	beq .L_8003626C
/* 80036038 00031FB8  3C 60 80 00 */	lis r3, 0x8000
/* 8003603C 00031FBC  1C 04 00 0C */	mulli r0, r4, 0xc
/* 80036040 00031FC0  7C 63 24 30 */	srw r3, r3, r4
/* 80036044 00031FC4  7C A4 18 78 */	andc r4, r5, r3
/* 80036048 00031FC8  7C 7E 02 14 */	add r3, r30, r0
/* 8003604C 00031FCC  90 8D 86 08 */	stw r4, ResettingBits@sda21(r13)
/* 80036050 00031FD0  38 80 00 00 */	li r4, 0x0
/* 80036054 00031FD4  38 A0 00 0C */	li r5, 0xc
/* 80036058 00031FD8  38 63 00 10 */	addi r3, r3, 0x10
/* 8003605C 00031FDC  4B FC F2 D1 */	bl memset
/* 80036060 00031FE0  3C 80 80 03 */	lis r4, PADTypeAndStatusCallback@ha
/* 80036064 00031FE4  80 6D 82 68 */	lwz r3, ResettingChan@sda21(r13)
/* 80036068 00031FE8  38 84 5F 60 */	addi r4, r4, PADTypeAndStatusCallback@l
/* 8003606C 00031FEC  4B FF 80 41 */	bl SIGetTypeAsync
/* 80036070 00031FF0  48 00 01 FC */	b .L_8003626C
.L_80036074:
/* 80036074 00031FF4  80 0D 82 74 */	lwz r0, Spec@sda21(r13)
/* 80036078 00031FF8  28 00 00 02 */	cmplwi r0, 0x2
/* 8003607C 00031FFC  40 80 00 84 */	bge .L_80036100
/* 80036080 00032000  80 0D 86 04 */	lwz r0, EnabledBits@sda21(r13)
/* 80036084 00032004  38 7D 00 00 */	addi r3, r29, 0x0
/* 80036088 00032008  38 81 00 1C */	addi r4, r1, 0x1c
/* 8003608C 0003200C  7C 00 E3 78 */	or r0, r0, r28
/* 80036090 00032010  90 0D 86 04 */	stw r0, EnabledBits@sda21(r13)
/* 80036094 00032014  4B FF 78 F5 */	bl SIGetResponse
/* 80036098 00032018  80 0D 82 70 */	lwz r0, AnalogMode@sda21(r13)
/* 8003609C 0003201C  38 7D 00 00 */	addi r3, r29, 0x0
/* 800360A0 00032020  64 04 00 40 */	oris r4, r0, 0x40
/* 800360A4 00032024  4B FF 76 11 */	bl SISetCommand
/* 800360A8 00032028  80 6D 86 04 */	lwz r3, EnabledBits@sda21(r13)
/* 800360AC 0003202C  4B FF 76 7D */	bl SIEnablePolling
/* 800360B0 00032030  80 8D 86 08 */	lwz r4, ResettingBits@sda21(r13)
/* 800360B4 00032034  7C 80 00 34 */	cntlzw r0, r4
/* 800360B8 00032038  90 0D 82 68 */	stw r0, ResettingChan@sda21(r13)
/* 800360BC 0003203C  80 6D 82 68 */	lwz r3, ResettingChan@sda21(r13)
/* 800360C0 00032040  2C 03 00 20 */	cmpwi r3, 0x20
/* 800360C4 00032044  41 82 01 A8 */	beq .L_8003626C
/* 800360C8 00032048  1C 03 00 0C */	mulli r0, r3, 0xc
/* 800360CC 0003204C  7F E3 1C 30 */	srw r3, r31, r3
/* 800360D0 00032050  7C 84 18 78 */	andc r4, r4, r3
/* 800360D4 00032054  7C 7E 02 14 */	add r3, r30, r0
/* 800360D8 00032058  90 8D 86 08 */	stw r4, ResettingBits@sda21(r13)
/* 800360DC 0003205C  38 80 00 00 */	li r4, 0x0
/* 800360E0 00032060  38 A0 00 0C */	li r5, 0xc
/* 800360E4 00032064  38 63 00 10 */	addi r3, r3, 0x10
/* 800360E8 00032068  4B FC F2 45 */	bl memset
/* 800360EC 0003206C  3C 80 80 03 */	lis r4, PADTypeAndStatusCallback@ha
/* 800360F0 00032070  80 6D 82 68 */	lwz r3, ResettingChan@sda21(r13)
/* 800360F4 00032074  38 84 5F 60 */	addi r4, r4, PADTypeAndStatusCallback@l
/* 800360F8 00032078  4B FF 7F B5 */	bl SIGetTypeAsync
/* 800360FC 0003207C  48 00 01 70 */	b .L_8003626C
.L_80036100:
/* 80036100 00032080  54 C0 00 01 */	clrrwi. r0, r6, 31
/* 80036104 00032084  41 82 00 0C */	beq .L_80036110
/* 80036108 00032088  54 C0 01 4B */	rlwinm. r0, r6, 0, 5, 5
/* 8003610C 0003208C  41 82 00 74 */	beq .L_80036180
.L_80036110:
/* 80036110 00032090  28 05 00 00 */	cmplwi r5, 0x0
/* 80036114 00032094  41 82 00 38 */	beq .L_8003614C
/* 80036118 00032098  1C 1D 00 0C */	mulli r0, r29, 0xc
/* 8003611C 0003209C  3C 60 80 03 */	lis r3, PADOriginCallback@ha
/* 80036120 000320A0  7C DE 02 14 */	add r6, r30, r0
/* 80036124 000320A4  39 03 5D 04 */	addi r8, r3, PADOriginCallback@l
/* 80036128 000320A8  38 7D 00 00 */	addi r3, r29, 0x0
/* 8003612C 000320AC  38 8D 82 80 */	addi r4, r13, CmdCalibrate@sda21
/* 80036130 000320B0  38 A0 00 03 */	li r5, 0x3
/* 80036134 000320B4  38 E0 00 0A */	li r7, 0xa
/* 80036138 000320B8  39 40 00 00 */	li r10, 0x0
/* 8003613C 000320BC  39 20 00 00 */	li r9, 0x0
/* 80036140 000320C0  38 C6 00 10 */	addi r6, r6, 0x10
/* 80036144 000320C4  4B FF 79 A1 */	bl SITransfer
/* 80036148 000320C8  48 00 00 C0 */	b .L_80036208
.L_8003614C:
/* 8003614C 000320CC  1C 1D 00 0C */	mulli r0, r29, 0xc
/* 80036150 000320D0  3C 60 80 03 */	lis r3, PADOriginCallback@ha
/* 80036154 000320D4  7C DE 02 14 */	add r6, r30, r0
/* 80036158 000320D8  39 03 5D 04 */	addi r8, r3, PADOriginCallback@l
/* 8003615C 000320DC  38 7D 00 00 */	addi r3, r29, 0x0
/* 80036160 000320E0  38 8D 82 7C */	addi r4, r13, CmdReadOrigin@sda21
/* 80036164 000320E4  38 A0 00 01 */	li r5, 0x1
/* 80036168 000320E8  38 E0 00 0A */	li r7, 0xa
/* 8003616C 000320EC  39 40 00 00 */	li r10, 0x0
/* 80036170 000320F0  39 20 00 00 */	li r9, 0x0
/* 80036174 000320F4  38 C6 00 10 */	addi r6, r6, 0x10
/* 80036178 000320F8  4B FF 79 6D */	bl SITransfer
/* 8003617C 000320FC  48 00 00 8C */	b .L_80036208
.L_80036180:
/* 80036180 00032100  54 C0 02 D7 */	rlwinm. r0, r6, 0, 11, 11
/* 80036184 00032104  41 82 00 84 */	beq .L_80036208
/* 80036188 00032108  54 C0 03 19 */	rlwinm. r0, r6, 0, 12, 12
/* 8003618C 0003210C  40 82 00 7C */	bne .L_80036208
/* 80036190 00032110  54 C0 03 5B */	rlwinm. r0, r6, 0, 13, 13
/* 80036194 00032114  40 82 00 74 */	bne .L_80036208
/* 80036198 00032118  54 C0 00 43 */	rlwinm. r0, r6, 0, 1, 1
/* 8003619C 0003211C  41 82 00 38 */	beq .L_800361D4
/* 800361A0 00032120  1C 1D 00 0C */	mulli r0, r29, 0xc
/* 800361A4 00032124  3C 60 80 03 */	lis r3, PADOriginCallback@ha
/* 800361A8 00032128  7C DE 02 14 */	add r6, r30, r0
/* 800361AC 0003212C  39 03 5D 04 */	addi r8, r3, PADOriginCallback@l
/* 800361B0 00032130  38 7D 00 00 */	addi r3, r29, 0x0
/* 800361B4 00032134  38 8D 82 7C */	addi r4, r13, CmdReadOrigin@sda21
/* 800361B8 00032138  38 A0 00 01 */	li r5, 0x1
/* 800361BC 0003213C  38 E0 00 0A */	li r7, 0xa
/* 800361C0 00032140  39 40 00 00 */	li r10, 0x0
/* 800361C4 00032144  39 20 00 00 */	li r9, 0x0
/* 800361C8 00032148  38 C6 00 10 */	addi r6, r6, 0x10
/* 800361CC 0003214C  4B FF 79 19 */	bl SITransfer
/* 800361D0 00032150  48 00 00 38 */	b .L_80036208
.L_800361D4:
/* 800361D4 00032154  1C 1D 00 0C */	mulli r0, r29, 0xc
/* 800361D8 00032158  3C 60 80 03 */	lis r3, PADProbeCallback@ha
/* 800361DC 0003215C  7C 9E 22 14 */	add r4, r30, r4
/* 800361E0 00032160  7C DE 02 14 */	add r6, r30, r0
/* 800361E4 00032164  39 03 5E 88 */	addi r8, r3, PADProbeCallback@l
/* 800361E8 00032168  38 7D 00 00 */	addi r3, r29, 0x0
/* 800361EC 0003216C  38 A0 00 03 */	li r5, 0x3
/* 800361F0 00032170  38 E0 00 08 */	li r7, 0x8
/* 800361F4 00032174  39 40 00 00 */	li r10, 0x0
/* 800361F8 00032178  39 20 00 00 */	li r9, 0x0
/* 800361FC 0003217C  38 84 00 40 */	addi r4, r4, 0x40
/* 80036200 00032180  38 C6 00 10 */	addi r6, r6, 0x10
/* 80036204 00032184  4B FF 78 E1 */	bl SITransfer
.L_80036208:
/* 80036208 00032188  2C 03 00 00 */	cmpwi r3, 0x0
/* 8003620C 0003218C  40 82 00 60 */	bne .L_8003626C
/* 80036210 00032190  80 AD 86 08 */	lwz r5, ResettingBits@sda21(r13)
/* 80036214 00032194  80 6D 86 18 */	lwz r3, PendingBits@sda21(r13)
/* 80036218 00032198  7C A0 00 34 */	cntlzw r0, r5
/* 8003621C 0003219C  90 0D 82 68 */	stw r0, ResettingChan@sda21(r13)
/* 80036220 000321A0  7C 60 E3 78 */	or r0, r3, r28
/* 80036224 000321A4  80 8D 82 68 */	lwz r4, ResettingChan@sda21(r13)
/* 80036228 000321A8  90 0D 86 18 */	stw r0, PendingBits@sda21(r13)
/* 8003622C 000321AC  2C 04 00 20 */	cmpwi r4, 0x20
/* 80036230 000321B0  41 82 00 3C */	beq .L_8003626C
/* 80036234 000321B4  3C 60 80 00 */	lis r3, 0x8000
/* 80036238 000321B8  1C 04 00 0C */	mulli r0, r4, 0xc
/* 8003623C 000321BC  7C 63 24 30 */	srw r3, r3, r4
/* 80036240 000321C0  7C A4 18 78 */	andc r4, r5, r3
/* 80036244 000321C4  7C 7E 02 14 */	add r3, r30, r0
/* 80036248 000321C8  90 8D 86 08 */	stw r4, ResettingBits@sda21(r13)
/* 8003624C 000321CC  38 80 00 00 */	li r4, 0x0
/* 80036250 000321D0  38 A0 00 0C */	li r5, 0xc
/* 80036254 000321D4  38 63 00 10 */	addi r3, r3, 0x10
/* 80036258 000321D8  4B FC F0 D5 */	bl memset
/* 8003625C 000321DC  3C 80 80 03 */	lis r4, PADTypeAndStatusCallback@ha
/* 80036260 000321E0  80 6D 82 68 */	lwz r3, ResettingChan@sda21(r13)
/* 80036264 000321E4  38 84 5F 60 */	addi r4, r4, PADTypeAndStatusCallback@l
/* 80036268 000321E8  4B FF 7E 45 */	bl SIGetTypeAsync
.L_8003626C:
/* 8003626C 000321EC  80 01 00 44 */	lwz r0, 0x44(r1)
/* 80036270 000321F0  83 E1 00 3C */	lwz r31, 0x3c(r1)
/* 80036274 000321F4  83 C1 00 38 */	lwz r30, 0x38(r1)
/* 80036278 000321F8  7C 08 03 A6 */	mtlr r0
/* 8003627C 000321FC  83 A1 00 34 */	lwz r29, 0x34(r1)
/* 80036280 00032200  83 81 00 30 */	lwz r28, 0x30(r1)
/* 80036284 00032204  38 21 00 40 */	addi r1, r1, 0x40
/* 80036288 00032208  4E 80 00 20 */	blr
.endfn PADTypeAndStatusCallback

.fn PADReceiveCheckCallback, local
/* 8003628C 0003220C  7C 08 02 A6 */	mflr r0
/* 80036290 00032210  90 01 00 04 */	stw r0, 0x4(r1)
/* 80036294 00032214  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 80036298 00032218  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 8003629C 0003221C  7C 7F 1B 78 */	mr r31, r3
/* 800362A0 00032220  3C 60 80 00 */	lis r3, 0x8000
/* 800362A4 00032224  93 C1 00 18 */	stw r30, 0x18(r1)
/* 800362A8 00032228  93 A1 00 14 */	stw r29, 0x14(r1)
/* 800362AC 0003222C  7C 7D FC 30 */	srw r29, r3, r31
/* 800362B0 00032230  80 0D 86 04 */	lwz r0, EnabledBits@sda21(r13)
/* 800362B4 00032234  7C 00 E8 39 */	and. r0, r0, r29
/* 800362B8 00032238  41 82 00 EC */	beq .L_800363A4
/* 800362BC 0003223C  80 AD 86 10 */	lwz r5, WaitingBits@sda21(r13)
/* 800362C0 00032240  7F A6 E8 F8 */	nor r6, r29, r29
/* 800362C4 00032244  80 6D 86 14 */	lwz r3, CheckingBits@sda21(r13)
/* 800362C8 00032248  54 80 07 3F */	clrlwi. r0, r4, 28
/* 800362CC 0003224C  7C A5 30 38 */	and r5, r5, r6
/* 800362D0 00032250  7C 63 30 38 */	and r3, r3, r6
/* 800362D4 00032254  90 AD 86 10 */	stw r5, WaitingBits@sda21(r13)
/* 800362D8 00032258  90 6D 86 14 */	stw r3, CheckingBits@sda21(r13)
/* 800362DC 0003225C  54 83 00 2E */	clrrwi r3, r4, 8
/* 800362E0 00032260  40 82 00 6C */	bne .L_8003634C
/* 800362E4 00032264  54 60 00 01 */	clrrwi. r0, r3, 31
/* 800362E8 00032268  41 82 00 64 */	beq .L_8003634C
/* 800362EC 0003226C  54 60 02 D7 */	rlwinm. r0, r3, 0, 11, 11
/* 800362F0 00032270  41 82 00 5C */	beq .L_8003634C
/* 800362F4 00032274  54 60 00 43 */	rlwinm. r0, r3, 0, 1, 1
/* 800362F8 00032278  41 82 00 54 */	beq .L_8003634C
/* 800362FC 0003227C  54 60 01 4B */	rlwinm. r0, r3, 0, 5, 5
/* 80036300 00032280  40 82 00 4C */	bne .L_8003634C
/* 80036304 00032284  54 60 03 19 */	rlwinm. r0, r3, 0, 12, 12
/* 80036308 00032288  40 82 00 44 */	bne .L_8003634C
/* 8003630C 0003228C  54 60 03 5B */	rlwinm. r0, r3, 0, 13, 13
/* 80036310 00032290  40 82 00 3C */	bne .L_8003634C
/* 80036314 00032294  1C 9F 00 0C */	mulli r4, r31, 0xc
/* 80036318 00032298  3C 60 80 08 */	lis r3, Origin@ha
/* 8003631C 0003229C  38 03 10 A0 */	addi r0, r3, Origin@l
/* 80036320 000322A0  3C 60 80 03 */	lis r3, PADOriginUpdateCallback@ha
/* 80036324 000322A4  7C C0 22 14 */	add r6, r0, r4
/* 80036328 000322A8  39 03 5D C8 */	addi r8, r3, PADOriginUpdateCallback@l
/* 8003632C 000322AC  38 7F 00 00 */	addi r3, r31, 0x0
/* 80036330 000322B0  38 8D 82 7C */	addi r4, r13, CmdReadOrigin@sda21
/* 80036334 000322B4  38 A0 00 01 */	li r5, 0x1
/* 80036338 000322B8  38 E0 00 0A */	li r7, 0xa
/* 8003633C 000322BC  39 40 00 00 */	li r10, 0x0
/* 80036340 000322C0  39 20 00 00 */	li r9, 0x0
/* 80036344 000322C4  4B FF 77 A1 */	bl SITransfer
/* 80036348 000322C8  48 00 00 5C */	b .L_800363A4
.L_8003634C:
/* 8003634C 000322CC  4B FF 4C 99 */	bl OSDisableInterrupts
/* 80036350 000322D0  3B C3 00 00 */	addi r30, r3, 0x0
/* 80036354 000322D4  38 7D 00 00 */	addi r3, r29, 0x0
/* 80036358 000322D8  4B FF 74 6D */	bl SIDisablePolling
/* 8003635C 000322DC  80 CD 86 04 */	lwz r6, EnabledBits@sda21(r13)
/* 80036360 000322E0  7F A8 E8 F8 */	nor r8, r29, r29
/* 80036364 000322E4  80 AD 86 10 */	lwz r5, WaitingBits@sda21(r13)
/* 80036368 000322E8  7F E3 FB 78 */	mr r3, r31
/* 8003636C 000322EC  80 8D 86 14 */	lwz r4, CheckingBits@sda21(r13)
/* 80036370 000322F0  80 0D 86 18 */	lwz r0, PendingBits@sda21(r13)
/* 80036374 000322F4  7C C7 40 38 */	and r7, r6, r8
/* 80036378 000322F8  7C A6 40 38 */	and r6, r5, r8
/* 8003637C 000322FC  90 ED 86 04 */	stw r7, EnabledBits@sda21(r13)
/* 80036380 00032300  7C 85 40 38 */	and r5, r4, r8
/* 80036384 00032304  7C 00 40 38 */	and r0, r0, r8
/* 80036388 00032308  90 CD 86 10 */	stw r6, WaitingBits@sda21(r13)
/* 8003638C 0003230C  38 80 00 00 */	li r4, 0x0
/* 80036390 00032310  90 AD 86 14 */	stw r5, CheckingBits@sda21(r13)
/* 80036394 00032314  90 0D 86 18 */	stw r0, PendingBits@sda21(r13)
/* 80036398 00032318  4B FF 66 A9 */	bl OSSetWirelessID
/* 8003639C 0003231C  7F C3 F3 78 */	mr r3, r30
/* 800363A0 00032320  4B FF 4C 6D */	bl OSRestoreInterrupts
.L_800363A4:
/* 800363A4 00032324  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800363A8 00032328  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800363AC 0003232C  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800363B0 00032330  7C 08 03 A6 */	mtlr r0
/* 800363B4 00032334  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800363B8 00032338  38 21 00 20 */	addi r1, r1, 0x20
/* 800363BC 0003233C  4E 80 00 20 */	blr
.endfn PADReceiveCheckCallback

.fn PADReset, global
/* 800363C0 00032340  7C 08 02 A6 */	mflr r0
/* 800363C4 00032344  90 01 00 04 */	stw r0, 0x4(r1)
/* 800363C8 00032348  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 800363CC 0003234C  93 E1 00 14 */	stw r31, 0x14(r1)
/* 800363D0 00032350  93 C1 00 10 */	stw r30, 0x10(r1)
/* 800363D4 00032354  7C 7E 1B 78 */	mr r30, r3
/* 800363D8 00032358  4B FF 4C 0D */	bl OSDisableInterrupts
/* 800363DC 0003235C  80 ED 86 18 */	lwz r7, PendingBits@sda21(r13)
/* 800363E0 00032360  38 C0 00 00 */	li r6, 0x0
/* 800363E4 00032364  80 AD 86 10 */	lwz r5, WaitingBits@sda21(r13)
/* 800363E8 00032368  7C 7F 1B 78 */	mr r31, r3
/* 800363EC 0003236C  80 8D 86 14 */	lwz r4, CheckingBits@sda21(r13)
/* 800363F0 00032370  80 0D 82 74 */	lwz r0, Spec@sda21(r13)
/* 800363F4 00032374  7F DE 3B 78 */	or r30, r30, r7
/* 800363F8 00032378  7C A4 23 78 */	or r4, r5, r4
/* 800363FC 0003237C  80 AD 86 08 */	lwz r5, ResettingBits@sda21(r13)
/* 80036400 00032380  7F DE 20 78 */	andc r30, r30, r4
/* 80036404 00032384  7C A5 F3 78 */	or r5, r5, r30
/* 80036408 00032388  80 8D 86 04 */	lwz r4, EnabledBits@sda21(r13)
/* 8003640C 0003238C  28 00 00 04 */	cmplwi r0, 0x4
/* 80036410 00032390  90 CD 86 18 */	stw r6, PendingBits@sda21(r13)
/* 80036414 00032394  7C 80 F0 78 */	andc r0, r4, r30
/* 80036418 00032398  90 AD 86 08 */	stw r5, ResettingBits@sda21(r13)
/* 8003641C 0003239C  90 0D 86 04 */	stw r0, EnabledBits@sda21(r13)
/* 80036420 000323A0  40 82 00 10 */	bne .L_80036430
/* 80036424 000323A4  80 0D 86 0C */	lwz r0, RecalibrateBits@sda21(r13)
/* 80036428 000323A8  7C 00 F3 78 */	or r0, r0, r30
/* 8003642C 000323AC  90 0D 86 0C */	stw r0, RecalibrateBits@sda21(r13)
.L_80036430:
/* 80036430 000323B0  80 6D 86 08 */	lwz r3, ResettingBits@sda21(r13)
/* 80036434 000323B4  4B FF 73 91 */	bl SIDisablePolling
/* 80036438 000323B8  80 0D 82 68 */	lwz r0, ResettingChan@sda21(r13)
/* 8003643C 000323BC  2C 00 00 20 */	cmpwi r0, 0x20
/* 80036440 000323C0  40 82 00 58 */	bne .L_80036498
/* 80036444 000323C4  80 AD 86 08 */	lwz r5, ResettingBits@sda21(r13)
/* 80036448 000323C8  7C A0 00 34 */	cntlzw r0, r5
/* 8003644C 000323CC  90 0D 82 68 */	stw r0, ResettingChan@sda21(r13)
/* 80036450 000323D0  80 8D 82 68 */	lwz r4, ResettingChan@sda21(r13)
/* 80036454 000323D4  2C 04 00 20 */	cmpwi r4, 0x20
/* 80036458 000323D8  41 82 00 40 */	beq .L_80036498
/* 8003645C 000323DC  3C 00 80 00 */	lis r0, 0x8000
/* 80036460 000323E0  7C 00 24 30 */	srw r0, r0, r4
/* 80036464 000323E4  7C A0 00 78 */	andc r0, r5, r0
/* 80036468 000323E8  1C 84 00 0C */	mulli r4, r4, 0xc
/* 8003646C 000323EC  90 0D 86 08 */	stw r0, ResettingBits@sda21(r13)
/* 80036470 000323F0  3C 60 80 08 */	lis r3, Origin@ha
/* 80036474 000323F4  38 03 10 A0 */	addi r0, r3, Origin@l
/* 80036478 000323F8  7C 60 22 14 */	add r3, r0, r4
/* 8003647C 000323FC  38 80 00 00 */	li r4, 0x0
/* 80036480 00032400  38 A0 00 0C */	li r5, 0xc
/* 80036484 00032404  4B FC EE A9 */	bl memset
/* 80036488 00032408  3C 80 80 03 */	lis r4, PADTypeAndStatusCallback@ha
/* 8003648C 0003240C  80 6D 82 68 */	lwz r3, ResettingChan@sda21(r13)
/* 80036490 00032410  38 84 5F 60 */	addi r4, r4, PADTypeAndStatusCallback@l
/* 80036494 00032414  4B FF 7C 19 */	bl SIGetTypeAsync
.L_80036498:
/* 80036498 00032418  7F E3 FB 78 */	mr r3, r31
/* 8003649C 0003241C  4B FF 4B 71 */	bl OSRestoreInterrupts
/* 800364A0 00032420  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 800364A4 00032424  38 60 00 01 */	li r3, 0x1
/* 800364A8 00032428  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 800364AC 0003242C  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 800364B0 00032430  7C 08 03 A6 */	mtlr r0
/* 800364B4 00032434  38 21 00 18 */	addi r1, r1, 0x18
/* 800364B8 00032438  4E 80 00 20 */	blr
.endfn PADReset

.fn PADInit, global
/* 800364BC 0003243C  7C 08 02 A6 */	mflr r0
/* 800364C0 00032440  3C 60 80 08 */	lis r3, Type@ha
/* 800364C4 00032444  90 01 00 04 */	stw r0, 0x4(r1)
/* 800364C8 00032448  94 21 FF C8 */	stwu r1, -0x38(r1)
/* 800364CC 0003244C  BF 21 00 1C */	stmw r25, 0x1c(r1)
/* 800364D0 00032450  3B E3 10 90 */	addi r31, r3, Type@l
/* 800364D4 00032454  80 0D 86 00 */	lwz r0, Initialized@sda21(r13)
/* 800364D8 00032458  2C 00 00 00 */	cmpwi r0, 0x0
/* 800364DC 0003245C  40 82 01 04 */	bne .L_800365E0
/* 800364E0 00032460  80 6D 86 24 */	lwz r3, __PADSpec@sda21(r13)
/* 800364E4 00032464  28 03 00 00 */	cmplwi r3, 0x0
/* 800364E8 00032468  41 82 00 08 */	beq .L_800364F0
/* 800364EC 0003246C  48 00 06 39 */	bl PADSetSpec
.L_800364F0:
/* 800364F0 00032470  80 6D 84 D0 */	lwz r3, __PADFixBits@sda21(r13)
/* 800364F4 00032474  3C 03 00 01 */	addis r0, r3, 0x1
/* 800364F8 00032478  28 00 FF FF */	cmplwi r0, 0xffff
/* 800364FC 0003247C  40 82 00 84 */	bne .L_80036580
/* 80036500 00032480  4B FF 90 1D */	bl OSGetTime
/* 80036504 00032484  3B 24 00 00 */	addi r25, r4, 0x0
/* 80036508 00032488  3B 43 00 00 */	addi r26, r3, 0x0
/* 8003650C 0003248C  38 A0 00 10 */	li r5, 0x10
/* 80036510 00032490  48 02 92 99 */	bl __shr2i
/* 80036514 00032494  3C A0 00 01 */	lis r5, 0x1
/* 80036518 00032498  3B 65 FF FF */	addi r27, r5, -0x1
/* 8003651C 0003249C  3B 80 00 00 */	li r28, 0x0
/* 80036520 000324A0  7C 86 D8 38 */	and r6, r4, r27
/* 80036524 000324A4  7F 24 D8 38 */	and r4, r25, r27
/* 80036528 000324A8  7C 65 E0 38 */	and r5, r3, r28
/* 8003652C 000324AC  7F 40 E0 38 */	and r0, r26, r28
/* 80036530 000324B0  7F A4 30 14 */	addc r29, r4, r6
/* 80036534 000324B4  38 7A 00 00 */	addi r3, r26, 0x0
/* 80036538 000324B8  38 99 00 00 */	addi r4, r25, 0x0
/* 8003653C 000324BC  7F C0 29 14 */	adde r30, r0, r5
/* 80036540 000324C0  38 A0 00 20 */	li r5, 0x20
/* 80036544 000324C4  48 02 92 65 */	bl __shr2i
/* 80036548 000324C8  7C 84 D8 38 */	and r4, r4, r27
/* 8003654C 000324CC  7C 60 E0 38 */	and r0, r3, r28
/* 80036550 000324D0  7F A4 E8 14 */	addc r29, r4, r29
/* 80036554 000324D4  38 7A 00 00 */	addi r3, r26, 0x0
/* 80036558 000324D8  38 99 00 00 */	addi r4, r25, 0x0
/* 8003655C 000324DC  7F C0 F1 14 */	adde r30, r0, r30
/* 80036560 000324E0  38 A0 00 30 */	li r5, 0x30
/* 80036564 000324E4  48 02 92 45 */	bl __shr2i
/* 80036568 000324E8  7C 80 D8 38 */	and r0, r4, r27
/* 8003656C 000324EC  7C 80 E8 14 */	addc r4, r0, r29
/* 80036570 000324F0  38 00 3F FF */	li r0, 0x3fff
/* 80036574 000324F4  7C 80 00 38 */	and r0, r4, r0
/* 80036578 000324F8  3C 60 80 00 */	lis r3, 0x800030E0@ha
/* 8003657C 000324FC  B0 03 30 E0 */	sth r0, 0x800030E0@l(r3)
.L_80036580:
/* 80036580 00032500  3C A0 80 00 */	lis r5, 0x800030E0@ha
/* 80036584 00032504  A0 85 30 E0 */	lhz r4, 0x800030E0@l(r5)
/* 80036588 00032508  38 00 00 01 */	li r0, 0x1
/* 8003658C 0003250C  38 60 00 00 */	li r3, 0x0
/* 80036590 00032510  54 84 42 AE */	clrlslwi r4, r4, 18, 8
/* 80036594 00032514  64 84 4D 00 */	oris r4, r4, 0x4d00
/* 80036598 00032518  90 9F 00 40 */	stw r4, 0x40(r31)
/* 8003659C 0003251C  A0 85 30 E0 */	lhz r4, 0x30e0(r5)
/* 800365A0 00032520  54 84 42 AE */	clrlslwi r4, r4, 18, 8
/* 800365A4 00032524  64 84 4D 40 */	oris r4, r4, 0x4d40
/* 800365A8 00032528  90 9F 00 44 */	stw r4, 0x44(r31)
/* 800365AC 0003252C  A0 85 30 E0 */	lhz r4, 0x30e0(r5)
/* 800365B0 00032530  54 84 42 AE */	clrlslwi r4, r4, 18, 8
/* 800365B4 00032534  64 84 4D 80 */	oris r4, r4, 0x4d80
/* 800365B8 00032538  90 9F 00 48 */	stw r4, 0x48(r31)
/* 800365BC 0003253C  A0 85 30 E0 */	lhz r4, 0x30e0(r5)
/* 800365C0 00032540  54 84 42 AE */	clrlslwi r4, r4, 18, 8
/* 800365C4 00032544  64 84 4D C0 */	oris r4, r4, 0x4dc0
/* 800365C8 00032548  90 9F 00 4C */	stw r4, 0x4c(r31)
/* 800365CC 0003254C  90 0D 86 00 */	stw r0, Initialized@sda21(r13)
/* 800365D0 00032550  48 00 04 A5 */	bl PADSetSamplingRate
/* 800365D4 00032554  3C 60 80 07 */	lis r3, ResetFunctionInfo@ha
/* 800365D8 00032558  38 63 86 78 */	addi r3, r3, ResetFunctionInfo@l
/* 800365DC 0003255C  4B FF 56 3D */	bl OSRegisterResetFunction
.L_800365E0:
/* 800365E0 00032560  3F 80 F0 00 */	lis r28, 0xf000
/* 800365E4 00032564  4B FF 4A 01 */	bl OSDisableInterrupts
/* 800365E8 00032568  80 ED 86 18 */	lwz r7, PendingBits@sda21(r13)
/* 800365EC 0003256C  38 C0 00 00 */	li r6, 0x0
/* 800365F0 00032570  80 AD 86 10 */	lwz r5, WaitingBits@sda21(r13)
/* 800365F4 00032574  7C 7B 1B 78 */	mr r27, r3
/* 800365F8 00032578  80 8D 86 14 */	lwz r4, CheckingBits@sda21(r13)
/* 800365FC 0003257C  80 0D 82 74 */	lwz r0, Spec@sda21(r13)
/* 80036600 00032580  7F 9C 3B 78 */	or r28, r28, r7
/* 80036604 00032584  7C A4 23 78 */	or r4, r5, r4
/* 80036608 00032588  80 AD 86 08 */	lwz r5, ResettingBits@sda21(r13)
/* 8003660C 0003258C  7F 9C 20 78 */	andc r28, r28, r4
/* 80036610 00032590  7C A5 E3 78 */	or r5, r5, r28
/* 80036614 00032594  80 8D 86 04 */	lwz r4, EnabledBits@sda21(r13)
/* 80036618 00032598  28 00 00 04 */	cmplwi r0, 0x4
/* 8003661C 0003259C  90 CD 86 18 */	stw r6, PendingBits@sda21(r13)
/* 80036620 000325A0  7C 80 E0 78 */	andc r0, r4, r28
/* 80036624 000325A4  90 AD 86 08 */	stw r5, ResettingBits@sda21(r13)
/* 80036628 000325A8  90 0D 86 04 */	stw r0, EnabledBits@sda21(r13)
/* 8003662C 000325AC  40 82 00 10 */	bne .L_8003663C
/* 80036630 000325B0  80 0D 86 0C */	lwz r0, RecalibrateBits@sda21(r13)
/* 80036634 000325B4  7C 00 E3 78 */	or r0, r0, r28
/* 80036638 000325B8  90 0D 86 0C */	stw r0, RecalibrateBits@sda21(r13)
.L_8003663C:
/* 8003663C 000325BC  80 6D 86 08 */	lwz r3, ResettingBits@sda21(r13)
/* 80036640 000325C0  4B FF 71 85 */	bl SIDisablePolling
/* 80036644 000325C4  80 0D 82 68 */	lwz r0, ResettingChan@sda21(r13)
/* 80036648 000325C8  2C 00 00 20 */	cmpwi r0, 0x20
/* 8003664C 000325CC  40 82 00 54 */	bne .L_800366A0
/* 80036650 000325D0  80 AD 86 08 */	lwz r5, ResettingBits@sda21(r13)
/* 80036654 000325D4  7C A0 00 34 */	cntlzw r0, r5
/* 80036658 000325D8  90 0D 82 68 */	stw r0, ResettingChan@sda21(r13)
/* 8003665C 000325DC  80 8D 82 68 */	lwz r4, ResettingChan@sda21(r13)
/* 80036660 000325E0  2C 04 00 20 */	cmpwi r4, 0x20
/* 80036664 000325E4  41 82 00 3C */	beq .L_800366A0
/* 80036668 000325E8  3C 60 80 00 */	lis r3, 0x8000
/* 8003666C 000325EC  1C 04 00 0C */	mulli r0, r4, 0xc
/* 80036670 000325F0  7C 63 24 30 */	srw r3, r3, r4
/* 80036674 000325F4  7C A4 18 78 */	andc r4, r5, r3
/* 80036678 000325F8  7C 7F 02 14 */	add r3, r31, r0
/* 8003667C 000325FC  90 8D 86 08 */	stw r4, ResettingBits@sda21(r13)
/* 80036680 00032600  38 80 00 00 */	li r4, 0x0
/* 80036684 00032604  38 A0 00 0C */	li r5, 0xc
/* 80036688 00032608  38 63 00 10 */	addi r3, r3, 0x10
/* 8003668C 0003260C  4B FC EC A1 */	bl memset
/* 80036690 00032610  3C 80 80 03 */	lis r4, PADTypeAndStatusCallback@ha
/* 80036694 00032614  80 6D 82 68 */	lwz r3, ResettingChan@sda21(r13)
/* 80036698 00032618  38 84 5F 60 */	addi r4, r4, PADTypeAndStatusCallback@l
/* 8003669C 0003261C  4B FF 7A 11 */	bl SIGetTypeAsync
.L_800366A0:
/* 800366A0 00032620  7F 63 DB 78 */	mr r3, r27
/* 800366A4 00032624  4B FF 49 69 */	bl OSRestoreInterrupts
/* 800366A8 00032628  BB 21 00 1C */	lmw r25, 0x1c(r1)
/* 800366AC 0003262C  38 60 00 01 */	li r3, 0x1
/* 800366B0 00032630  80 01 00 3C */	lwz r0, 0x3c(r1)
/* 800366B4 00032634  38 21 00 38 */	addi r1, r1, 0x38
/* 800366B8 00032638  7C 08 03 A6 */	mtlr r0
/* 800366BC 0003263C  4E 80 00 20 */	blr
.endfn PADInit

.fn PADRead, global
/* 800366C0 00032640  7C 08 02 A6 */	mflr r0
/* 800366C4 00032644  90 01 00 04 */	stw r0, 0x4(r1)
/* 800366C8 00032648  94 21 FF B8 */	stwu r1, -0x48(r1)
/* 800366CC 0003264C  BE 81 00 18 */	stmw r20, 0x18(r1)
/* 800366D0 00032650  7C 7F 1B 78 */	mr r31, r3
/* 800366D4 00032654  4B FF 49 11 */	bl OSDisableInterrupts
/* 800366D8 00032658  3A A0 00 00 */	li r21, 0x0
/* 800366DC 0003265C  1C 15 00 0C */	mulli r0, r21, 0xc
/* 800366E0 00032660  3C 80 80 08 */	lis r4, Origin@ha
/* 800366E4 00032664  3B 44 10 A0 */	addi r26, r4, Origin@l
/* 800366E8 00032668  3C 80 80 03 */	lis r4, PADOriginUpdateCallback@ha
/* 800366EC 0003266C  3C A0 80 03 */	lis r5, PADReceiveCheckCallback@ha
/* 800366F0 00032670  3C C0 80 03 */	lis r6, PADTypeAndStatusCallback@ha
/* 800366F4 00032674  7F 1A 02 14 */	add r24, r26, r0
/* 800366F8 00032678  3A C3 00 00 */	addi r22, r3, 0x0
/* 800366FC 0003267C  3B C4 5D C8 */	addi r30, r4, PADOriginUpdateCallback@l
/* 80036700 00032680  3B A5 62 8C */	addi r29, r5, PADReceiveCheckCallback@l
/* 80036704 00032684  3B 86 5F 60 */	addi r28, r6, PADTypeAndStatusCallback@l
/* 80036708 00032688  3A 80 00 00 */	li r20, 0x0
/* 8003670C 0003268C  3F 60 80 00 */	lis r27, 0x8000
.L_80036710:
/* 80036710 00032690  80 0D 86 18 */	lwz r0, PendingBits@sda21(r13)
/* 80036714 00032694  7F 77 AC 30 */	srw r23, r27, r21
/* 80036718 00032698  20 75 00 03 */	subfic r3, r21, 0x3
/* 8003671C 0003269C  7C 00 B8 39 */	and. r0, r0, r23
/* 80036720 000326A0  54 79 18 38 */	slwi r25, r3, 3
/* 80036724 000326A4  41 82 00 D4 */	beq .L_800367F8
/* 80036728 000326A8  4B FF 48 BD */	bl OSDisableInterrupts
/* 8003672C 000326AC  80 8D 86 10 */	lwz r4, WaitingBits@sda21(r13)
/* 80036730 000326B0  38 C0 00 00 */	li r6, 0x0
/* 80036734 000326B4  80 0D 86 14 */	lwz r0, CheckingBits@sda21(r13)
/* 80036738 000326B8  7C 79 1B 78 */	mr r25, r3
/* 8003673C 000326BC  80 ED 86 18 */	lwz r7, PendingBits@sda21(r13)
/* 80036740 000326C0  7C 84 03 78 */	or r4, r4, r0
/* 80036744 000326C4  80 0D 82 74 */	lwz r0, Spec@sda21(r13)
/* 80036748 000326C8  7C E7 20 78 */	andc r7, r7, r4
/* 8003674C 000326CC  80 AD 86 08 */	lwz r5, ResettingBits@sda21(r13)
/* 80036750 000326D0  80 8D 86 04 */	lwz r4, EnabledBits@sda21(r13)
/* 80036754 000326D4  28 00 00 04 */	cmplwi r0, 0x4
/* 80036758 000326D8  7C A5 3B 78 */	or r5, r5, r7
/* 8003675C 000326DC  90 CD 86 18 */	stw r6, PendingBits@sda21(r13)
/* 80036760 000326E0  7C 80 38 78 */	andc r0, r4, r7
/* 80036764 000326E4  90 AD 86 08 */	stw r5, ResettingBits@sda21(r13)
/* 80036768 000326E8  90 0D 86 04 */	stw r0, EnabledBits@sda21(r13)
/* 8003676C 000326EC  40 82 00 10 */	bne .L_8003677C
/* 80036770 000326F0  80 0D 86 0C */	lwz r0, RecalibrateBits@sda21(r13)
/* 80036774 000326F4  7C 00 3B 78 */	or r0, r0, r7
/* 80036778 000326F8  90 0D 86 0C */	stw r0, RecalibrateBits@sda21(r13)
.L_8003677C:
/* 8003677C 000326FC  80 6D 86 08 */	lwz r3, ResettingBits@sda21(r13)
/* 80036780 00032700  4B FF 70 45 */	bl SIDisablePolling
/* 80036784 00032704  80 0D 82 68 */	lwz r0, ResettingChan@sda21(r13)
/* 80036788 00032708  2C 00 00 20 */	cmpwi r0, 0x20
/* 8003678C 0003270C  40 82 00 48 */	bne .L_800367D4
/* 80036790 00032710  80 8D 86 08 */	lwz r4, ResettingBits@sda21(r13)
/* 80036794 00032714  7C 80 00 34 */	cntlzw r0, r4
/* 80036798 00032718  90 0D 82 68 */	stw r0, ResettingChan@sda21(r13)
/* 8003679C 0003271C  80 6D 82 68 */	lwz r3, ResettingChan@sda21(r13)
/* 800367A0 00032720  2C 03 00 20 */	cmpwi r3, 0x20
/* 800367A4 00032724  41 82 00 30 */	beq .L_800367D4
/* 800367A8 00032728  1C 03 00 0C */	mulli r0, r3, 0xc
/* 800367AC 0003272C  7F 63 1C 30 */	srw r3, r27, r3
/* 800367B0 00032730  7C 84 18 78 */	andc r4, r4, r3
/* 800367B4 00032734  90 8D 86 08 */	stw r4, ResettingBits@sda21(r13)
/* 800367B8 00032738  7C 7A 02 14 */	add r3, r26, r0
/* 800367BC 0003273C  38 80 00 00 */	li r4, 0x0
/* 800367C0 00032740  38 A0 00 0C */	li r5, 0xc
/* 800367C4 00032744  4B FC EB 69 */	bl memset
/* 800367C8 00032748  80 6D 82 68 */	lwz r3, ResettingChan@sda21(r13)
/* 800367CC 0003274C  7F 84 E3 78 */	mr r4, r28
/* 800367D0 00032750  4B FF 78 DD */	bl SIGetTypeAsync
.L_800367D4:
/* 800367D4 00032754  7F 23 CB 78 */	mr r3, r25
/* 800367D8 00032758  4B FF 48 35 */	bl OSRestoreInterrupts
/* 800367DC 0003275C  38 00 FF FE */	li r0, -0x2
/* 800367E0 00032760  98 1F 00 0A */	stb r0, 0xa(r31)
/* 800367E4 00032764  38 7F 00 00 */	addi r3, r31, 0x0
/* 800367E8 00032768  38 80 00 00 */	li r4, 0x0
/* 800367EC 0003276C  38 A0 00 0A */	li r5, 0xa
/* 800367F0 00032770  4B FC EB 3D */	bl memset
/* 800367F4 00032774  48 00 02 4C */	b .L_80036A40
.L_800367F8:
/* 800367F8 00032778  80 0D 86 08 */	lwz r0, ResettingBits@sda21(r13)
/* 800367FC 0003277C  7C 00 B8 39 */	and. r0, r0, r23
/* 80036800 00032780  40 82 00 10 */	bne .L_80036810
/* 80036804 00032784  80 0D 82 68 */	lwz r0, ResettingChan@sda21(r13)
/* 80036808 00032788  7C 00 A8 00 */	cmpw r0, r21
/* 8003680C 0003278C  40 82 00 20 */	bne .L_8003682C
.L_80036810:
/* 80036810 00032790  38 00 FF FE */	li r0, -0x2
/* 80036814 00032794  98 1F 00 0A */	stb r0, 0xa(r31)
/* 80036818 00032798  38 7F 00 00 */	addi r3, r31, 0x0
/* 8003681C 0003279C  38 80 00 00 */	li r4, 0x0
/* 80036820 000327A0  38 A0 00 0A */	li r5, 0xa
/* 80036824 000327A4  4B FC EB 09 */	bl memset
/* 80036828 000327A8  48 00 02 18 */	b .L_80036A40
.L_8003682C:
/* 8003682C 000327AC  80 0D 86 04 */	lwz r0, EnabledBits@sda21(r13)
/* 80036830 000327B0  7C 00 B8 39 */	and. r0, r0, r23
/* 80036834 000327B4  40 82 00 20 */	bne .L_80036854
/* 80036838 000327B8  38 00 FF FF */	li r0, -0x1
/* 8003683C 000327BC  98 1F 00 0A */	stb r0, 0xa(r31)
/* 80036840 000327C0  38 7F 00 00 */	addi r3, r31, 0x0
/* 80036844 000327C4  38 80 00 00 */	li r4, 0x0
/* 80036848 000327C8  38 A0 00 0A */	li r5, 0xa
/* 8003684C 000327CC  4B FC EA E1 */	bl memset
/* 80036850 000327D0  48 00 01 F0 */	b .L_80036A40
.L_80036854:
/* 80036854 000327D4  7E A3 AB 78 */	mr r3, r21
/* 80036858 000327D8  4B FF 62 B5 */	bl SIIsChanBusy
/* 8003685C 000327DC  2C 03 00 00 */	cmpwi r3, 0x0
/* 80036860 000327E0  41 82 00 20 */	beq .L_80036880
/* 80036864 000327E4  38 00 FF FD */	li r0, -0x3
/* 80036868 000327E8  98 1F 00 0A */	stb r0, 0xa(r31)
/* 8003686C 000327EC  38 7F 00 00 */	addi r3, r31, 0x0
/* 80036870 000327F0  38 80 00 00 */	li r4, 0x0
/* 80036874 000327F4  38 A0 00 0A */	li r5, 0xa
/* 80036878 000327F8  4B FC EA B5 */	bl memset
/* 8003687C 000327FC  48 00 01 C4 */	b .L_80036A40
.L_80036880:
/* 80036880 00032800  4B FF 6D 45 */	bl SIGetStatus
/* 80036884 00032804  38 00 00 08 */	li r0, 0x8
/* 80036888 00032808  7C 00 C8 30 */	slw r0, r0, r25
/* 8003688C 0003280C  7C 60 00 39 */	and. r0, r3, r0
/* 80036890 00032810  41 82 00 CC */	beq .L_8003695C
/* 80036894 00032814  38 75 00 00 */	addi r3, r21, 0x0
/* 80036898 00032818  38 81 00 10 */	addi r4, r1, 0x10
/* 8003689C 0003281C  4B FF 70 ED */	bl SIGetResponse
/* 800368A0 00032820  80 0D 86 10 */	lwz r0, WaitingBits@sda21(r13)
/* 800368A4 00032824  7C 00 B8 39 */	and. r0, r0, r23
/* 800368A8 00032828  41 82 00 40 */	beq .L_800368E8
/* 800368AC 0003282C  38 00 00 00 */	li r0, 0x0
/* 800368B0 00032830  98 1F 00 0A */	stb r0, 0xa(r31)
/* 800368B4 00032834  38 7F 00 00 */	addi r3, r31, 0x0
/* 800368B8 00032838  38 80 00 00 */	li r4, 0x0
/* 800368BC 0003283C  38 A0 00 0A */	li r5, 0xa
/* 800368C0 00032840  4B FC EA 6D */	bl memset
/* 800368C4 00032844  80 6D 86 14 */	lwz r3, CheckingBits@sda21(r13)
/* 800368C8 00032848  7C 60 B8 39 */	and. r0, r3, r23
/* 800368CC 0003284C  40 82 01 74 */	bne .L_80036A40
/* 800368D0 00032850  7C 60 BB 78 */	or r0, r3, r23
/* 800368D4 00032854  90 0D 86 14 */	stw r0, CheckingBits@sda21(r13)
/* 800368D8 00032858  38 75 00 00 */	addi r3, r21, 0x0
/* 800368DC 0003285C  38 9D 00 00 */	addi r4, r29, 0x0
/* 800368E0 00032860  4B FF 77 CD */	bl SIGetTypeAsync
/* 800368E4 00032864  48 00 01 5C */	b .L_80036A40
.L_800368E8:
/* 800368E8 00032868  4B FF 46 FD */	bl OSDisableInterrupts
/* 800368EC 0003286C  3B 23 00 00 */	addi r25, r3, 0x0
/* 800368F0 00032870  38 77 00 00 */	addi r3, r23, 0x0
/* 800368F4 00032874  4B FF 6E D1 */	bl SIDisablePolling
/* 800368F8 00032878  80 CD 86 04 */	lwz r6, EnabledBits@sda21(r13)
/* 800368FC 0003287C  7E E8 B8 F8 */	nor r8, r23, r23
/* 80036900 00032880  80 AD 86 10 */	lwz r5, WaitingBits@sda21(r13)
/* 80036904 00032884  7E A3 AB 78 */	mr r3, r21
/* 80036908 00032888  80 8D 86 14 */	lwz r4, CheckingBits@sda21(r13)
/* 8003690C 0003288C  80 0D 86 18 */	lwz r0, PendingBits@sda21(r13)
/* 80036910 00032890  7C C7 40 38 */	and r7, r6, r8
/* 80036914 00032894  7C A6 40 38 */	and r6, r5, r8
/* 80036918 00032898  90 ED 86 04 */	stw r7, EnabledBits@sda21(r13)
/* 8003691C 0003289C  7C 85 40 38 */	and r5, r4, r8
/* 80036920 000328A0  7C 00 40 38 */	and r0, r0, r8
/* 80036924 000328A4  90 CD 86 10 */	stw r6, WaitingBits@sda21(r13)
/* 80036928 000328A8  38 80 00 00 */	li r4, 0x0
/* 8003692C 000328AC  90 AD 86 14 */	stw r5, CheckingBits@sda21(r13)
/* 80036930 000328B0  90 0D 86 18 */	stw r0, PendingBits@sda21(r13)
/* 80036934 000328B4  4B FF 61 0D */	bl OSSetWirelessID
/* 80036938 000328B8  7F 23 CB 78 */	mr r3, r25
/* 8003693C 000328BC  4B FF 46 D1 */	bl OSRestoreInterrupts
/* 80036940 000328C0  38 00 FF FF */	li r0, -0x1
/* 80036944 000328C4  98 1F 00 0A */	stb r0, 0xa(r31)
/* 80036948 000328C8  38 7F 00 00 */	addi r3, r31, 0x0
/* 8003694C 000328CC  38 80 00 00 */	li r4, 0x0
/* 80036950 000328D0  38 A0 00 0A */	li r5, 0xa
/* 80036954 000328D4  4B FC E9 D9 */	bl memset
/* 80036958 000328D8  48 00 00 E8 */	b .L_80036A40
.L_8003695C:
/* 8003695C 000328DC  7E A3 AB 78 */	mr r3, r21
/* 80036960 000328E0  4B FF 75 89 */	bl SIGetType
/* 80036964 000328E4  54 60 00 85 */	rlwinm. r0, r3, 0, 2, 2
/* 80036968 000328E8  40 82 00 08 */	bne .L_80036970
/* 8003696C 000328EC  7E 94 BB 78 */	or r20, r20, r23
.L_80036970:
/* 80036970 000328F0  38 75 00 00 */	addi r3, r21, 0x0
/* 80036974 000328F4  38 81 00 10 */	addi r4, r1, 0x10
/* 80036978 000328F8  4B FF 70 11 */	bl SIGetResponse
/* 8003697C 000328FC  2C 03 00 00 */	cmpwi r3, 0x0
/* 80036980 00032900  40 82 00 20 */	bne .L_800369A0
/* 80036984 00032904  38 00 FF FD */	li r0, -0x3
/* 80036988 00032908  98 1F 00 0A */	stb r0, 0xa(r31)
/* 8003698C 0003290C  38 7F 00 00 */	addi r3, r31, 0x0
/* 80036990 00032910  38 80 00 00 */	li r4, 0x0
/* 80036994 00032914  38 A0 00 0A */	li r5, 0xa
/* 80036998 00032918  4B FC E9 95 */	bl memset
/* 8003699C 0003291C  48 00 00 A4 */	b .L_80036A40
.L_800369A0:
/* 800369A0 00032920  80 01 00 10 */	lwz r0, 0x10(r1)
/* 800369A4 00032924  54 00 00 01 */	clrrwi. r0, r0, 31
/* 800369A8 00032928  41 82 00 20 */	beq .L_800369C8
/* 800369AC 0003292C  38 00 FF FD */	li r0, -0x3
/* 800369B0 00032930  98 1F 00 0A */	stb r0, 0xa(r31)
/* 800369B4 00032934  38 7F 00 00 */	addi r3, r31, 0x0
/* 800369B8 00032938  38 80 00 00 */	li r4, 0x0
/* 800369BC 0003293C  38 A0 00 0A */	li r5, 0xa
/* 800369C0 00032940  4B FC E9 6D */	bl memset
/* 800369C4 00032944  48 00 00 7C */	b .L_80036A40
.L_800369C8:
/* 800369C8 00032948  81 8D 82 78 */	lwz r12, MakeStatus@sda21(r13)
/* 800369CC 0003294C  38 75 00 00 */	addi r3, r21, 0x0
/* 800369D0 00032950  38 9F 00 00 */	addi r4, r31, 0x0
/* 800369D4 00032954  7D 88 03 A6 */	mtlr r12
/* 800369D8 00032958  38 A1 00 10 */	addi r5, r1, 0x10
/* 800369DC 0003295C  4E 80 00 21 */	blrl
/* 800369E0 00032960  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 800369E4 00032964  54 00 04 A5 */	rlwinm. r0, r0, 0, 18, 18
/* 800369E8 00032968  41 82 00 44 */	beq .L_80036A2C
/* 800369EC 0003296C  38 00 FF FD */	li r0, -0x3
/* 800369F0 00032970  98 1F 00 0A */	stb r0, 0xa(r31)
/* 800369F4 00032974  38 7F 00 00 */	addi r3, r31, 0x0
/* 800369F8 00032978  38 80 00 00 */	li r4, 0x0
/* 800369FC 0003297C  38 A0 00 0A */	li r5, 0xa
/* 80036A00 00032980  4B FC E9 2D */	bl memset
/* 80036A04 00032984  38 75 00 00 */	addi r3, r21, 0x0
/* 80036A08 00032988  38 D8 00 00 */	addi r6, r24, 0x0
/* 80036A0C 0003298C  39 1E 00 00 */	addi r8, r30, 0x0
/* 80036A10 00032990  38 8D 82 7C */	addi r4, r13, CmdReadOrigin@sda21
/* 80036A14 00032994  38 A0 00 01 */	li r5, 0x1
/* 80036A18 00032998  38 E0 00 0A */	li r7, 0xa
/* 80036A1C 0003299C  39 40 00 00 */	li r10, 0x0
/* 80036A20 000329A0  39 20 00 00 */	li r9, 0x0
/* 80036A24 000329A4  4B FF 70 C1 */	bl SITransfer
/* 80036A28 000329A8  48 00 00 18 */	b .L_80036A40
.L_80036A2C:
/* 80036A2C 000329AC  38 00 00 00 */	li r0, 0x0
/* 80036A30 000329B0  98 1F 00 0A */	stb r0, 0xa(r31)
/* 80036A34 000329B4  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 80036A38 000329B8  54 00 06 6E */	rlwinm r0, r0, 0, 25, 23
/* 80036A3C 000329BC  B0 1F 00 00 */	sth r0, 0x0(r31)
.L_80036A40:
/* 80036A40 000329C0  3A B5 00 01 */	addi r21, r21, 0x1
/* 80036A44 000329C4  2C 15 00 04 */	cmpwi r21, 0x4
/* 80036A48 000329C8  3B 18 00 0C */	addi r24, r24, 0xc
/* 80036A4C 000329CC  3B FF 00 0C */	addi r31, r31, 0xc
/* 80036A50 000329D0  41 80 FC C0 */	blt .L_80036710
/* 80036A54 000329D4  7E C3 B3 78 */	mr r3, r22
/* 80036A58 000329D8  4B FF 45 B5 */	bl OSRestoreInterrupts
/* 80036A5C 000329DC  7E 83 A3 78 */	mr r3, r20
/* 80036A60 000329E0  BA 81 00 18 */	lmw r20, 0x18(r1)
/* 80036A64 000329E4  80 01 00 4C */	lwz r0, 0x4c(r1)
/* 80036A68 000329E8  38 21 00 48 */	addi r1, r1, 0x48
/* 80036A6C 000329EC  7C 08 03 A6 */	mtlr r0
/* 80036A70 000329F0  4E 80 00 20 */	blr
.endfn PADRead

.fn PADSetSamplingRate, global
/* 80036A74 000329F4  7C 08 02 A6 */	mflr r0
/* 80036A78 000329F8  90 01 00 04 */	stw r0, 0x4(r1)
/* 80036A7C 000329FC  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 80036A80 00032A00  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 80036A84 00032A04  93 C1 00 18 */	stw r30, 0x18(r1)
/* 80036A88 00032A08  93 A1 00 14 */	stw r29, 0x14(r1)
/* 80036A8C 00032A0C  3B A3 00 00 */	addi r29, r3, 0x0
/* 80036A90 00032A10  28 1D 00 0B */	cmplwi r29, 0xb
/* 80036A94 00032A14  3C 60 80 07 */	lis r3, ResetFunctionInfo@ha
/* 80036A98 00032A18  3B E3 86 78 */	addi r31, r3, ResetFunctionInfo@l
/* 80036A9C 00032A1C  40 81 00 08 */	ble .L_80036AA4
/* 80036AA0 00032A20  3B A0 00 0B */	li r29, 0xb
.L_80036AA4:
/* 80036AA4 00032A24  4B FF EE 3D */	bl VIGetTvFormat
/* 80036AA8 00032A28  2C 03 00 01 */	cmpwi r3, 0x1
/* 80036AAC 00032A2C  41 82 00 24 */	beq .L_80036AD0
/* 80036AB0 00032A30  40 80 00 10 */	bge .L_80036AC0
/* 80036AB4 00032A34  2C 03 00 00 */	cmpwi r3, 0x0
/* 80036AB8 00032A38  40 80 00 10 */	bge .L_80036AC8
/* 80036ABC 00032A3C  48 00 00 1C */	b .L_80036AD8
.L_80036AC0:
/* 80036AC0 00032A40  2C 03 00 03 */	cmpwi r3, 0x3
/* 80036AC4 00032A44  40 80 00 14 */	bge .L_80036AD8
.L_80036AC8:
/* 80036AC8 00032A48  3B DF 00 10 */	addi r30, r31, 0x10
/* 80036ACC 00032A4C  48 00 00 20 */	b .L_80036AEC
.L_80036AD0:
/* 80036AD0 00032A50  3B DF 00 28 */	addi r30, r31, 0x28
/* 80036AD4 00032A54  48 00 00 18 */	b .L_80036AEC
.L_80036AD8:
/* 80036AD8 00032A58  38 BF 00 40 */	addi r5, r31, 0x40
/* 80036ADC 00032A5C  4C C6 31 82 */	crclr 4*cr1+eq
/* 80036AE0 00032A60  38 6D 82 84 */	addi r3, r13, lbl_800A8D04@sda21
/* 80036AE4 00032A64  38 80 04 63 */	li r4, 0x463
/* 80036AE8 00032A68  4B FF 31 7D */	bl OSPanic
.L_80036AEC:
/* 80036AEC 00032A6C  57 A0 08 3C */	slwi r0, r29, 1
/* 80036AF0 00032A70  7C 9E 02 14 */	add r4, r30, r0
/* 80036AF4 00032A74  7C 7E 00 AE */	lbzx r3, r30, r0
/* 80036AF8 00032A78  88 84 00 01 */	lbz r4, 0x1(r4)
/* 80036AFC 00032A7C  4B FF 6B CD */	bl SISetXY
/* 80036B00 00032A80  80 6D 86 04 */	lwz r3, EnabledBits@sda21(r13)
/* 80036B04 00032A84  4B FF 6C 25 */	bl SIEnablePolling
/* 80036B08 00032A88  80 01 00 24 */	lwz r0, 0x24(r1)
/* 80036B0C 00032A8C  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 80036B10 00032A90  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 80036B14 00032A94  7C 08 03 A6 */	mtlr r0
/* 80036B18 00032A98  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 80036B1C 00032A9C  38 21 00 20 */	addi r1, r1, 0x20
/* 80036B20 00032AA0  4E 80 00 20 */	blr
.endfn PADSetSamplingRate

.fn PADSetSpec, global
/* 80036B24 00032AA4  38 00 00 00 */	li r0, 0x0
/* 80036B28 00032AA8  2C 03 00 01 */	cmpwi r3, 0x1
/* 80036B2C 00032AAC  90 0D 86 24 */	stw r0, __PADSpec@sda21(r13)
/* 80036B30 00032AB0  41 82 00 30 */	beq .L_80036B60
/* 80036B34 00032AB4  40 80 00 10 */	bge .L_80036B44
/* 80036B38 00032AB8  2C 03 00 00 */	cmpwi r3, 0x0
/* 80036B3C 00032ABC  40 80 00 14 */	bge .L_80036B50
/* 80036B40 00032AC0  48 00 00 3C */	b .L_80036B7C
.L_80036B44:
/* 80036B44 00032AC4  2C 03 00 06 */	cmpwi r3, 0x6
/* 80036B48 00032AC8  40 80 00 34 */	bge .L_80036B7C
/* 80036B4C 00032ACC  48 00 00 24 */	b .L_80036B70
.L_80036B50:
/* 80036B50 00032AD0  3C 80 80 03 */	lis r4, SPEC0_MakeStatus@ha
/* 80036B54 00032AD4  38 04 6B 84 */	addi r0, r4, SPEC0_MakeStatus@l
/* 80036B58 00032AD8  90 0D 82 78 */	stw r0, MakeStatus@sda21(r13)
/* 80036B5C 00032ADC  48 00 00 20 */	b .L_80036B7C
.L_80036B60:
/* 80036B60 00032AE0  3C 80 80 03 */	lis r4, SPEC1_MakeStatus@ha
/* 80036B64 00032AE4  38 04 6C F8 */	addi r0, r4, SPEC1_MakeStatus@l
/* 80036B68 00032AE8  90 0D 82 78 */	stw r0, MakeStatus@sda21(r13)
/* 80036B6C 00032AEC  48 00 00 10 */	b .L_80036B7C
.L_80036B70:
/* 80036B70 00032AF0  3C 80 80 03 */	lis r4, SPEC2_MakeStatus@ha
/* 80036B74 00032AF4  38 04 6E 6C */	addi r0, r4, SPEC2_MakeStatus@l
/* 80036B78 00032AF8  90 0D 82 78 */	stw r0, MakeStatus@sda21(r13)
.L_80036B7C:
/* 80036B7C 00032AFC  90 6D 82 74 */	stw r3, Spec@sda21(r13)
/* 80036B80 00032B00  4E 80 00 20 */	blr
.endfn PADSetSpec

.fn SPEC0_MakeStatus, local
/* 80036B84 00032B04  38 60 00 00 */	li r3, 0x0
/* 80036B88 00032B08  B0 64 00 00 */	sth r3, 0x0(r4)
/* 80036B8C 00032B0C  80 05 00 00 */	lwz r0, 0x0(r5)
/* 80036B90 00032B10  54 00 87 39 */	rlwinm. r0, r0, 16, 28, 28
/* 80036B94 00032B14  41 82 00 08 */	beq .L_80036B9C
/* 80036B98 00032B18  38 60 01 00 */	li r3, 0x100
.L_80036B9C:
/* 80036B9C 00032B1C  A0 04 00 00 */	lhz r0, 0x0(r4)
/* 80036BA0 00032B20  7C 00 1B 78 */	or r0, r0, r3
/* 80036BA4 00032B24  B0 04 00 00 */	sth r0, 0x0(r4)
/* 80036BA8 00032B28  80 05 00 00 */	lwz r0, 0x0(r5)
/* 80036BAC 00032B2C  54 00 86 B5 */	rlwinm. r0, r0, 16, 26, 26
/* 80036BB0 00032B30  41 82 00 0C */	beq .L_80036BBC
/* 80036BB4 00032B34  38 60 02 00 */	li r3, 0x200
/* 80036BB8 00032B38  48 00 00 08 */	b .L_80036BC0
.L_80036BBC:
/* 80036BBC 00032B3C  38 60 00 00 */	li r3, 0x0
.L_80036BC0:
/* 80036BC0 00032B40  A0 04 00 00 */	lhz r0, 0x0(r4)
/* 80036BC4 00032B44  7C 00 1B 78 */	or r0, r0, r3
/* 80036BC8 00032B48  B0 04 00 00 */	sth r0, 0x0(r4)
/* 80036BCC 00032B4C  80 05 00 00 */	lwz r0, 0x0(r5)
/* 80036BD0 00032B50  54 00 85 EF */	rlwinm. r0, r0, 16, 23, 23
/* 80036BD4 00032B54  41 82 00 0C */	beq .L_80036BE0
/* 80036BD8 00032B58  38 60 04 00 */	li r3, 0x400
/* 80036BDC 00032B5C  48 00 00 08 */	b .L_80036BE4
.L_80036BE0:
/* 80036BE0 00032B60  38 60 00 00 */	li r3, 0x0
.L_80036BE4:
/* 80036BE4 00032B64  A0 04 00 00 */	lhz r0, 0x0(r4)
/* 80036BE8 00032B68  7C 00 1B 78 */	or r0, r0, r3
/* 80036BEC 00032B6C  B0 04 00 00 */	sth r0, 0x0(r4)
/* 80036BF0 00032B70  80 05 00 00 */	lwz r0, 0x0(r5)
/* 80036BF4 00032B74  54 00 87 FF */	extrwi. r0, r0, 1, 15
/* 80036BF8 00032B78  41 82 00 0C */	beq .L_80036C04
/* 80036BFC 00032B7C  38 60 08 00 */	li r3, 0x800
/* 80036C00 00032B80  48 00 00 08 */	b .L_80036C08
.L_80036C04:
/* 80036C04 00032B84  38 60 00 00 */	li r3, 0x0
.L_80036C08:
/* 80036C08 00032B88  A0 04 00 00 */	lhz r0, 0x0(r4)
/* 80036C0C 00032B8C  7C 00 1B 78 */	or r0, r0, r3
/* 80036C10 00032B90  B0 04 00 00 */	sth r0, 0x0(r4)
/* 80036C14 00032B94  80 05 00 00 */	lwz r0, 0x0(r5)
/* 80036C18 00032B98  54 00 86 F7 */	rlwinm. r0, r0, 16, 27, 27
/* 80036C1C 00032B9C  41 82 00 0C */	beq .L_80036C28
/* 80036C20 00032BA0  38 C0 10 00 */	li r6, 0x1000
/* 80036C24 00032BA4  48 00 00 08 */	b .L_80036C2C
.L_80036C28:
/* 80036C28 00032BA8  38 C0 00 00 */	li r6, 0x0
.L_80036C2C:
/* 80036C2C 00032BAC  A0 64 00 00 */	lhz r3, 0x0(r4)
/* 80036C30 00032BB0  38 00 00 00 */	li r0, 0x0
/* 80036C34 00032BB4  7C 63 33 78 */	or r3, r3, r6
/* 80036C38 00032BB8  B0 64 00 00 */	sth r3, 0x0(r4)
/* 80036C3C 00032BBC  80 65 00 04 */	lwz r3, 0x4(r5)
/* 80036C40 00032BC0  54 63 84 3E */	srwi r3, r3, 16
/* 80036C44 00032BC4  7C 63 07 74 */	extsb r3, r3
/* 80036C48 00032BC8  98 64 00 02 */	stb r3, 0x2(r4)
/* 80036C4C 00032BCC  80 65 00 04 */	lwz r3, 0x4(r5)
/* 80036C50 00032BD0  54 63 46 3E */	srwi r3, r3, 24
/* 80036C54 00032BD4  7C 63 07 74 */	extsb r3, r3
/* 80036C58 00032BD8  98 64 00 03 */	stb r3, 0x3(r4)
/* 80036C5C 00032BDC  80 65 00 04 */	lwz r3, 0x4(r5)
/* 80036C60 00032BE0  7C 63 07 74 */	extsb r3, r3
/* 80036C64 00032BE4  98 64 00 04 */	stb r3, 0x4(r4)
/* 80036C68 00032BE8  80 65 00 04 */	lwz r3, 0x4(r5)
/* 80036C6C 00032BEC  54 63 C2 3E */	srwi r3, r3, 8
/* 80036C70 00032BF0  7C 63 07 74 */	extsb r3, r3
/* 80036C74 00032BF4  98 64 00 05 */	stb r3, 0x5(r4)
/* 80036C78 00032BF8  80 65 00 00 */	lwz r3, 0x0(r5)
/* 80036C7C 00032BFC  54 63 C6 3E */	extrwi r3, r3, 8, 16
/* 80036C80 00032C00  98 64 00 06 */	stb r3, 0x6(r4)
/* 80036C84 00032C04  80 65 00 00 */	lwz r3, 0x0(r5)
/* 80036C88 00032C08  98 64 00 07 */	stb r3, 0x7(r4)
/* 80036C8C 00032C0C  98 04 00 08 */	stb r0, 0x8(r4)
/* 80036C90 00032C10  98 04 00 09 */	stb r0, 0x9(r4)
/* 80036C94 00032C14  88 04 00 06 */	lbz r0, 0x6(r4)
/* 80036C98 00032C18  28 00 00 AA */	cmplwi r0, 0xaa
/* 80036C9C 00032C1C  41 80 00 10 */	blt .L_80036CAC
/* 80036CA0 00032C20  A0 04 00 00 */	lhz r0, 0x0(r4)
/* 80036CA4 00032C24  60 00 00 40 */	ori r0, r0, 0x40
/* 80036CA8 00032C28  B0 04 00 00 */	sth r0, 0x0(r4)
.L_80036CAC:
/* 80036CAC 00032C2C  88 04 00 07 */	lbz r0, 0x7(r4)
/* 80036CB0 00032C30  28 00 00 AA */	cmplwi r0, 0xaa
/* 80036CB4 00032C34  41 80 00 10 */	blt .L_80036CC4
/* 80036CB8 00032C38  A0 04 00 00 */	lhz r0, 0x0(r4)
/* 80036CBC 00032C3C  60 00 00 20 */	ori r0, r0, 0x20
/* 80036CC0 00032C40  B0 04 00 00 */	sth r0, 0x0(r4)
.L_80036CC4:
/* 80036CC4 00032C44  88 64 00 02 */	lbz r3, 0x2(r4)
/* 80036CC8 00032C48  38 03 FF 80 */	addi r0, r3, -0x80
/* 80036CCC 00032C4C  98 04 00 02 */	stb r0, 0x2(r4)
/* 80036CD0 00032C50  88 64 00 03 */	lbz r3, 0x3(r4)
/* 80036CD4 00032C54  38 03 FF 80 */	addi r0, r3, -0x80
/* 80036CD8 00032C58  98 04 00 03 */	stb r0, 0x3(r4)
/* 80036CDC 00032C5C  88 64 00 04 */	lbz r3, 0x4(r4)
/* 80036CE0 00032C60  38 03 FF 80 */	addi r0, r3, -0x80
/* 80036CE4 00032C64  98 04 00 04 */	stb r0, 0x4(r4)
/* 80036CE8 00032C68  88 64 00 05 */	lbz r3, 0x5(r4)
/* 80036CEC 00032C6C  38 03 FF 80 */	addi r0, r3, -0x80
/* 80036CF0 00032C70  98 04 00 05 */	stb r0, 0x5(r4)
/* 80036CF4 00032C74  4E 80 00 20 */	blr
.endfn SPEC0_MakeStatus

.fn SPEC1_MakeStatus, local
/* 80036CF8 00032C78  38 60 00 00 */	li r3, 0x0
/* 80036CFC 00032C7C  B0 64 00 00 */	sth r3, 0x0(r4)
/* 80036D00 00032C80  80 05 00 00 */	lwz r0, 0x0(r5)
/* 80036D04 00032C84  54 00 86 31 */	rlwinm. r0, r0, 16, 24, 24
/* 80036D08 00032C88  41 82 00 08 */	beq .L_80036D10
/* 80036D0C 00032C8C  38 60 01 00 */	li r3, 0x100
.L_80036D10:
/* 80036D10 00032C90  A0 04 00 00 */	lhz r0, 0x0(r4)
/* 80036D14 00032C94  7C 00 1B 78 */	or r0, r0, r3
/* 80036D18 00032C98  B0 04 00 00 */	sth r0, 0x0(r4)
/* 80036D1C 00032C9C  80 05 00 00 */	lwz r0, 0x0(r5)
/* 80036D20 00032CA0  54 00 85 EF */	rlwinm. r0, r0, 16, 23, 23
/* 80036D24 00032CA4  41 82 00 0C */	beq .L_80036D30
/* 80036D28 00032CA8  38 60 02 00 */	li r3, 0x200
/* 80036D2C 00032CAC  48 00 00 08 */	b .L_80036D34
.L_80036D30:
/* 80036D30 00032CB0  38 60 00 00 */	li r3, 0x0
.L_80036D34:
/* 80036D34 00032CB4  A0 04 00 00 */	lhz r0, 0x0(r4)
/* 80036D38 00032CB8  7C 00 1B 78 */	or r0, r0, r3
/* 80036D3C 00032CBC  B0 04 00 00 */	sth r0, 0x0(r4)
/* 80036D40 00032CC0  80 05 00 00 */	lwz r0, 0x0(r5)
/* 80036D44 00032CC4  54 00 86 B5 */	rlwinm. r0, r0, 16, 26, 26
/* 80036D48 00032CC8  41 82 00 0C */	beq .L_80036D54
/* 80036D4C 00032CCC  38 60 04 00 */	li r3, 0x400
/* 80036D50 00032CD0  48 00 00 08 */	b .L_80036D58
.L_80036D54:
/* 80036D54 00032CD4  38 60 00 00 */	li r3, 0x0
.L_80036D58:
/* 80036D58 00032CD8  A0 04 00 00 */	lhz r0, 0x0(r4)
/* 80036D5C 00032CDC  7C 00 1B 78 */	or r0, r0, r3
/* 80036D60 00032CE0  B0 04 00 00 */	sth r0, 0x0(r4)
/* 80036D64 00032CE4  80 05 00 00 */	lwz r0, 0x0(r5)
/* 80036D68 00032CE8  54 00 86 F7 */	rlwinm. r0, r0, 16, 27, 27
/* 80036D6C 00032CEC  41 82 00 0C */	beq .L_80036D78
/* 80036D70 00032CF0  38 60 08 00 */	li r3, 0x800
/* 80036D74 00032CF4  48 00 00 08 */	b .L_80036D7C
.L_80036D78:
/* 80036D78 00032CF8  38 60 00 00 */	li r3, 0x0
.L_80036D7C:
/* 80036D7C 00032CFC  A0 04 00 00 */	lhz r0, 0x0(r4)
/* 80036D80 00032D00  7C 00 1B 78 */	or r0, r0, r3
/* 80036D84 00032D04  B0 04 00 00 */	sth r0, 0x0(r4)
/* 80036D88 00032D08  80 05 00 00 */	lwz r0, 0x0(r5)
/* 80036D8C 00032D0C  54 00 85 AD */	rlwinm. r0, r0, 16, 22, 22
/* 80036D90 00032D10  41 82 00 0C */	beq .L_80036D9C
/* 80036D94 00032D14  38 C0 10 00 */	li r6, 0x1000
/* 80036D98 00032D18  48 00 00 08 */	b .L_80036DA0
.L_80036D9C:
/* 80036D9C 00032D1C  38 C0 00 00 */	li r6, 0x0
.L_80036DA0:
/* 80036DA0 00032D20  A0 64 00 00 */	lhz r3, 0x0(r4)
/* 80036DA4 00032D24  38 00 00 00 */	li r0, 0x0
/* 80036DA8 00032D28  7C 63 33 78 */	or r3, r3, r6
/* 80036DAC 00032D2C  B0 64 00 00 */	sth r3, 0x0(r4)
/* 80036DB0 00032D30  80 65 00 04 */	lwz r3, 0x4(r5)
/* 80036DB4 00032D34  54 63 84 3E */	srwi r3, r3, 16
/* 80036DB8 00032D38  7C 63 07 74 */	extsb r3, r3
/* 80036DBC 00032D3C  98 64 00 02 */	stb r3, 0x2(r4)
/* 80036DC0 00032D40  80 65 00 04 */	lwz r3, 0x4(r5)
/* 80036DC4 00032D44  54 63 46 3E */	srwi r3, r3, 24
/* 80036DC8 00032D48  7C 63 07 74 */	extsb r3, r3
/* 80036DCC 00032D4C  98 64 00 03 */	stb r3, 0x3(r4)
/* 80036DD0 00032D50  80 65 00 04 */	lwz r3, 0x4(r5)
/* 80036DD4 00032D54  7C 63 07 74 */	extsb r3, r3
/* 80036DD8 00032D58  98 64 00 04 */	stb r3, 0x4(r4)
/* 80036DDC 00032D5C  80 65 00 04 */	lwz r3, 0x4(r5)
/* 80036DE0 00032D60  54 63 C2 3E */	srwi r3, r3, 8
/* 80036DE4 00032D64  7C 63 07 74 */	extsb r3, r3
/* 80036DE8 00032D68  98 64 00 05 */	stb r3, 0x5(r4)
/* 80036DEC 00032D6C  80 65 00 00 */	lwz r3, 0x0(r5)
/* 80036DF0 00032D70  54 63 C6 3E */	extrwi r3, r3, 8, 16
/* 80036DF4 00032D74  98 64 00 06 */	stb r3, 0x6(r4)
/* 80036DF8 00032D78  80 65 00 00 */	lwz r3, 0x0(r5)
/* 80036DFC 00032D7C  98 64 00 07 */	stb r3, 0x7(r4)
/* 80036E00 00032D80  98 04 00 08 */	stb r0, 0x8(r4)
/* 80036E04 00032D84  98 04 00 09 */	stb r0, 0x9(r4)
/* 80036E08 00032D88  88 04 00 06 */	lbz r0, 0x6(r4)
/* 80036E0C 00032D8C  28 00 00 AA */	cmplwi r0, 0xaa
/* 80036E10 00032D90  41 80 00 10 */	blt .L_80036E20
/* 80036E14 00032D94  A0 04 00 00 */	lhz r0, 0x0(r4)
/* 80036E18 00032D98  60 00 00 40 */	ori r0, r0, 0x40
/* 80036E1C 00032D9C  B0 04 00 00 */	sth r0, 0x0(r4)
.L_80036E20:
/* 80036E20 00032DA0  88 04 00 07 */	lbz r0, 0x7(r4)
/* 80036E24 00032DA4  28 00 00 AA */	cmplwi r0, 0xaa
/* 80036E28 00032DA8  41 80 00 10 */	blt .L_80036E38
/* 80036E2C 00032DAC  A0 04 00 00 */	lhz r0, 0x0(r4)
/* 80036E30 00032DB0  60 00 00 20 */	ori r0, r0, 0x20
/* 80036E34 00032DB4  B0 04 00 00 */	sth r0, 0x0(r4)
.L_80036E38:
/* 80036E38 00032DB8  88 64 00 02 */	lbz r3, 0x2(r4)
/* 80036E3C 00032DBC  38 03 FF 80 */	addi r0, r3, -0x80
/* 80036E40 00032DC0  98 04 00 02 */	stb r0, 0x2(r4)
/* 80036E44 00032DC4  88 64 00 03 */	lbz r3, 0x3(r4)
/* 80036E48 00032DC8  38 03 FF 80 */	addi r0, r3, -0x80
/* 80036E4C 00032DCC  98 04 00 03 */	stb r0, 0x3(r4)
/* 80036E50 00032DD0  88 64 00 04 */	lbz r3, 0x4(r4)
/* 80036E54 00032DD4  38 03 FF 80 */	addi r0, r3, -0x80
/* 80036E58 00032DD8  98 04 00 04 */	stb r0, 0x4(r4)
/* 80036E5C 00032DDC  88 64 00 05 */	lbz r3, 0x5(r4)
/* 80036E60 00032DE0  38 03 FF 80 */	addi r0, r3, -0x80
/* 80036E64 00032DE4  98 04 00 05 */	stb r0, 0x5(r4)
/* 80036E68 00032DE8  4E 80 00 20 */	blr
.endfn SPEC1_MakeStatus

.fn SPEC2_MakeStatus, local
/* 80036E6C 00032DEC  80 05 00 00 */	lwz r0, 0x0(r5)
/* 80036E70 00032DF0  54 00 84 BE */	extrwi r0, r0, 14, 2
/* 80036E74 00032DF4  B0 04 00 00 */	sth r0, 0x0(r4)
/* 80036E78 00032DF8  80 05 00 00 */	lwz r0, 0x0(r5)
/* 80036E7C 00032DFC  54 00 C2 3E */	srwi r0, r0, 8
/* 80036E80 00032E00  7C 00 07 74 */	extsb r0, r0
/* 80036E84 00032E04  98 04 00 02 */	stb r0, 0x2(r4)
/* 80036E88 00032E08  80 05 00 00 */	lwz r0, 0x0(r5)
/* 80036E8C 00032E0C  7C 00 07 74 */	extsb r0, r0
/* 80036E90 00032E10  98 04 00 03 */	stb r0, 0x3(r4)
/* 80036E94 00032E14  80 0D 82 70 */	lwz r0, AnalogMode@sda21(r13)
/* 80036E98 00032E18  54 00 05 6E */	rlwinm r0, r0, 0, 21, 23
/* 80036E9C 00032E1C  2C 00 04 00 */	cmpwi r0, 0x400
/* 80036EA0 00032E20  41 82 01 98 */	beq .L_80037038
/* 80036EA4 00032E24  40 80 00 34 */	bge .L_80036ED8
/* 80036EA8 00032E28  2C 00 02 00 */	cmpwi r0, 0x200
/* 80036EAC 00032E2C  41 82 00 F8 */	beq .L_80036FA4
/* 80036EB0 00032E30  40 80 00 1C */	bge .L_80036ECC
/* 80036EB4 00032E34  2C 00 01 00 */	cmpwi r0, 0x100
/* 80036EB8 00032E38  41 82 00 98 */	beq .L_80036F50
/* 80036EBC 00032E3C  40 80 01 BC */	bge .L_80037078
/* 80036EC0 00032E40  2C 00 00 00 */	cmpwi r0, 0x0
/* 80036EC4 00032E44  41 82 00 38 */	beq .L_80036EFC
/* 80036EC8 00032E48  48 00 01 B0 */	b .L_80037078
.L_80036ECC:
/* 80036ECC 00032E4C  2C 00 03 00 */	cmpwi r0, 0x300
/* 80036ED0 00032E50  41 82 01 24 */	beq .L_80036FF4
/* 80036ED4 00032E54  48 00 01 A4 */	b .L_80037078
.L_80036ED8:
/* 80036ED8 00032E58  2C 00 06 00 */	cmpwi r0, 0x600
/* 80036EDC 00032E5C  41 82 00 20 */	beq .L_80036EFC
/* 80036EE0 00032E60  40 80 00 10 */	bge .L_80036EF0
/* 80036EE4 00032E64  2C 00 05 00 */	cmpwi r0, 0x500
/* 80036EE8 00032E68  41 82 00 14 */	beq .L_80036EFC
/* 80036EEC 00032E6C  48 00 01 8C */	b .L_80037078
.L_80036EF0:
/* 80036EF0 00032E70  2C 00 07 00 */	cmpwi r0, 0x700
/* 80036EF4 00032E74  41 82 00 08 */	beq .L_80036EFC
/* 80036EF8 00032E78  48 00 01 80 */	b .L_80037078
.L_80036EFC:
/* 80036EFC 00032E7C  80 05 00 04 */	lwz r0, 0x4(r5)
/* 80036F00 00032E80  54 00 46 3E */	srwi r0, r0, 24
/* 80036F04 00032E84  7C 00 07 74 */	extsb r0, r0
/* 80036F08 00032E88  98 04 00 04 */	stb r0, 0x4(r4)
/* 80036F0C 00032E8C  80 05 00 04 */	lwz r0, 0x4(r5)
/* 80036F10 00032E90  54 00 84 3E */	srwi r0, r0, 16
/* 80036F14 00032E94  7C 00 07 74 */	extsb r0, r0
/* 80036F18 00032E98  98 04 00 05 */	stb r0, 0x5(r4)
/* 80036F1C 00032E9C  80 05 00 04 */	lwz r0, 0x4(r5)
/* 80036F20 00032EA0  54 00 C6 36 */	rlwinm r0, r0, 24, 24, 27
/* 80036F24 00032EA4  98 04 00 06 */	stb r0, 0x6(r4)
/* 80036F28 00032EA8  80 05 00 04 */	lwz r0, 0x4(r5)
/* 80036F2C 00032EAC  54 00 E6 36 */	rlwinm r0, r0, 28, 24, 27
/* 80036F30 00032EB0  98 04 00 07 */	stb r0, 0x7(r4)
/* 80036F34 00032EB4  80 05 00 04 */	lwz r0, 0x4(r5)
/* 80036F38 00032EB8  54 00 06 36 */	rlwinm r0, r0, 0, 24, 27
/* 80036F3C 00032EBC  98 04 00 08 */	stb r0, 0x8(r4)
/* 80036F40 00032EC0  80 05 00 04 */	lwz r0, 0x4(r5)
/* 80036F44 00032EC4  54 00 26 36 */	clrlslwi r0, r0, 28, 4
/* 80036F48 00032EC8  98 04 00 09 */	stb r0, 0x9(r4)
/* 80036F4C 00032ECC  48 00 01 2C */	b .L_80037078
.L_80036F50:
/* 80036F50 00032ED0  80 05 00 04 */	lwz r0, 0x4(r5)
/* 80036F54 00032ED4  54 00 46 36 */	rlwinm r0, r0, 8, 24, 27
/* 80036F58 00032ED8  7C 00 07 74 */	extsb r0, r0
/* 80036F5C 00032EDC  98 04 00 04 */	stb r0, 0x4(r4)
/* 80036F60 00032EE0  80 05 00 04 */	lwz r0, 0x4(r5)
/* 80036F64 00032EE4  54 00 66 36 */	rlwinm r0, r0, 12, 24, 27
/* 80036F68 00032EE8  7C 00 07 74 */	extsb r0, r0
/* 80036F6C 00032EEC  98 04 00 05 */	stb r0, 0x5(r4)
/* 80036F70 00032EF0  80 05 00 04 */	lwz r0, 0x4(r5)
/* 80036F74 00032EF4  54 00 86 3E */	extrwi r0, r0, 8, 8
/* 80036F78 00032EF8  98 04 00 06 */	stb r0, 0x6(r4)
/* 80036F7C 00032EFC  80 05 00 04 */	lwz r0, 0x4(r5)
/* 80036F80 00032F00  54 00 C6 3E */	extrwi r0, r0, 8, 16
/* 80036F84 00032F04  98 04 00 07 */	stb r0, 0x7(r4)
/* 80036F88 00032F08  80 05 00 04 */	lwz r0, 0x4(r5)
/* 80036F8C 00032F0C  54 00 06 36 */	rlwinm r0, r0, 0, 24, 27
/* 80036F90 00032F10  98 04 00 08 */	stb r0, 0x8(r4)
/* 80036F94 00032F14  80 05 00 04 */	lwz r0, 0x4(r5)
/* 80036F98 00032F18  54 00 26 36 */	clrlslwi r0, r0, 28, 4
/* 80036F9C 00032F1C  98 04 00 09 */	stb r0, 0x9(r4)
/* 80036FA0 00032F20  48 00 00 D8 */	b .L_80037078
.L_80036FA4:
/* 80036FA4 00032F24  80 05 00 04 */	lwz r0, 0x4(r5)
/* 80036FA8 00032F28  54 00 46 36 */	rlwinm r0, r0, 8, 24, 27
/* 80036FAC 00032F2C  7C 00 07 74 */	extsb r0, r0
/* 80036FB0 00032F30  98 04 00 04 */	stb r0, 0x4(r4)
/* 80036FB4 00032F34  80 05 00 04 */	lwz r0, 0x4(r5)
/* 80036FB8 00032F38  54 00 66 36 */	rlwinm r0, r0, 12, 24, 27
/* 80036FBC 00032F3C  7C 00 07 74 */	extsb r0, r0
/* 80036FC0 00032F40  98 04 00 05 */	stb r0, 0x5(r4)
/* 80036FC4 00032F44  80 05 00 04 */	lwz r0, 0x4(r5)
/* 80036FC8 00032F48  54 00 86 36 */	rlwinm r0, r0, 16, 24, 27
/* 80036FCC 00032F4C  98 04 00 06 */	stb r0, 0x6(r4)
/* 80036FD0 00032F50  80 05 00 04 */	lwz r0, 0x4(r5)
/* 80036FD4 00032F54  54 00 A6 36 */	rlwinm r0, r0, 20, 24, 27
/* 80036FD8 00032F58  98 04 00 07 */	stb r0, 0x7(r4)
/* 80036FDC 00032F5C  80 05 00 04 */	lwz r0, 0x4(r5)
/* 80036FE0 00032F60  54 00 C6 3E */	extrwi r0, r0, 8, 16
/* 80036FE4 00032F64  98 04 00 08 */	stb r0, 0x8(r4)
/* 80036FE8 00032F68  80 05 00 04 */	lwz r0, 0x4(r5)
/* 80036FEC 00032F6C  98 04 00 09 */	stb r0, 0x9(r4)
/* 80036FF0 00032F70  48 00 00 88 */	b .L_80037078
.L_80036FF4:
/* 80036FF4 00032F74  80 C5 00 04 */	lwz r6, 0x4(r5)
/* 80036FF8 00032F78  38 00 00 00 */	li r0, 0x0
/* 80036FFC 00032F7C  54 C6 46 3E */	srwi r6, r6, 24
/* 80037000 00032F80  7C C6 07 74 */	extsb r6, r6
/* 80037004 00032F84  98 C4 00 04 */	stb r6, 0x4(r4)
/* 80037008 00032F88  80 C5 00 04 */	lwz r6, 0x4(r5)
/* 8003700C 00032F8C  54 C6 84 3E */	srwi r6, r6, 16
/* 80037010 00032F90  7C C6 07 74 */	extsb r6, r6
/* 80037014 00032F94  98 C4 00 05 */	stb r6, 0x5(r4)
/* 80037018 00032F98  80 C5 00 04 */	lwz r6, 0x4(r5)
/* 8003701C 00032F9C  54 C6 C6 3E */	extrwi r6, r6, 8, 16
/* 80037020 00032FA0  98 C4 00 06 */	stb r6, 0x6(r4)
/* 80037024 00032FA4  80 A5 00 04 */	lwz r5, 0x4(r5)
/* 80037028 00032FA8  98 A4 00 07 */	stb r5, 0x7(r4)
/* 8003702C 00032FAC  98 04 00 08 */	stb r0, 0x8(r4)
/* 80037030 00032FB0  98 04 00 09 */	stb r0, 0x9(r4)
/* 80037034 00032FB4  48 00 00 44 */	b .L_80037078
.L_80037038:
/* 80037038 00032FB8  80 C5 00 04 */	lwz r6, 0x4(r5)
/* 8003703C 00032FBC  38 00 00 00 */	li r0, 0x0
/* 80037040 00032FC0  54 C6 46 3E */	srwi r6, r6, 24
/* 80037044 00032FC4  7C C6 07 74 */	extsb r6, r6
/* 80037048 00032FC8  98 C4 00 04 */	stb r6, 0x4(r4)
/* 8003704C 00032FCC  80 C5 00 04 */	lwz r6, 0x4(r5)
/* 80037050 00032FD0  54 C6 84 3E */	srwi r6, r6, 16
/* 80037054 00032FD4  7C C6 07 74 */	extsb r6, r6
/* 80037058 00032FD8  98 C4 00 05 */	stb r6, 0x5(r4)
/* 8003705C 00032FDC  98 04 00 06 */	stb r0, 0x6(r4)
/* 80037060 00032FE0  98 04 00 07 */	stb r0, 0x7(r4)
/* 80037064 00032FE4  80 05 00 04 */	lwz r0, 0x4(r5)
/* 80037068 00032FE8  54 00 C6 3E */	extrwi r0, r0, 8, 16
/* 8003706C 00032FEC  98 04 00 08 */	stb r0, 0x8(r4)
/* 80037070 00032FF0  80 05 00 04 */	lwz r0, 0x4(r5)
/* 80037074 00032FF4  98 04 00 09 */	stb r0, 0x9(r4)
.L_80037078:
/* 80037078 00032FF8  88 C4 00 02 */	lbz r6, 0x2(r4)
/* 8003707C 00032FFC  3C A0 80 08 */	lis r5, Origin@ha
/* 80037080 00033000  1C 63 00 0C */	mulli r3, r3, 0xc
/* 80037084 00033004  38 06 FF 80 */	addi r0, r6, -0x80
/* 80037088 00033008  98 04 00 02 */	stb r0, 0x2(r4)
/* 8003708C 0003300C  38 05 10 A0 */	addi r0, r5, Origin@l
/* 80037090 00033010  7C 60 1A 14 */	add r3, r0, r3
/* 80037094 00033014  88 A4 00 03 */	lbz r5, 0x3(r4)
/* 80037098 00033018  38 05 FF 80 */	addi r0, r5, -0x80
/* 8003709C 0003301C  98 04 00 03 */	stb r0, 0x3(r4)
/* 800370A0 00033020  88 A4 00 04 */	lbz r5, 0x4(r4)
/* 800370A4 00033024  38 05 FF 80 */	addi r0, r5, -0x80
/* 800370A8 00033028  98 04 00 04 */	stb r0, 0x4(r4)
/* 800370AC 0003302C  88 A4 00 05 */	lbz r5, 0x5(r4)
/* 800370B0 00033030  38 05 FF 80 */	addi r0, r5, -0x80
/* 800370B4 00033034  98 04 00 05 */	stb r0, 0x5(r4)
/* 800370B8 00033038  88 E3 00 02 */	lbz r7, 0x2(r3)
/* 800370BC 0003303C  88 C4 00 02 */	lbz r6, 0x2(r4)
/* 800370C0 00033040  7C E0 07 75 */	extsb. r0, r7
/* 800370C4 00033044  40 81 00 24 */	ble .L_800370E8
/* 800370C8 00033048  7C E5 07 74 */	extsb r5, r7
/* 800370CC 0003304C  38 05 FF 80 */	addi r0, r5, -0x80
/* 800370D0 00033050  7C 05 07 74 */	extsb r5, r0
/* 800370D4 00033054  7C C0 07 74 */	extsb r0, r6
/* 800370D8 00033058  7C 00 28 00 */	cmpw r0, r5
/* 800370DC 0003305C  40 80 00 30 */	bge .L_8003710C
/* 800370E0 00033060  7C A6 2B 78 */	mr r6, r5
/* 800370E4 00033064  48 00 00 28 */	b .L_8003710C
.L_800370E8:
/* 800370E8 00033068  7C E0 07 75 */	extsb. r0, r7
/* 800370EC 0003306C  40 80 00 20 */	bge .L_8003710C
/* 800370F0 00033070  7C E5 07 74 */	extsb r5, r7
/* 800370F4 00033074  38 05 00 7F */	addi r0, r5, 0x7f
/* 800370F8 00033078  7C 05 07 74 */	extsb r5, r0
/* 800370FC 0003307C  7C C0 07 74 */	extsb r0, r6
/* 80037100 00033080  7C 05 00 00 */	cmpw r5, r0
/* 80037104 00033084  40 80 00 08 */	bge .L_8003710C
/* 80037108 00033088  7C A6 2B 78 */	mr r6, r5
.L_8003710C:
/* 8003710C 0003308C  7C C7 30 50 */	subf r6, r7, r6
/* 80037110 00033090  98 C4 00 02 */	stb r6, 0x2(r4)
/* 80037114 00033094  88 E3 00 03 */	lbz r7, 0x3(r3)
/* 80037118 00033098  88 C4 00 03 */	lbz r6, 0x3(r4)
/* 8003711C 0003309C  7C E0 07 75 */	extsb. r0, r7
/* 80037120 000330A0  40 81 00 24 */	ble .L_80037144
/* 80037124 000330A4  7C E5 07 74 */	extsb r5, r7
/* 80037128 000330A8  38 05 FF 80 */	addi r0, r5, -0x80
/* 8003712C 000330AC  7C 05 07 74 */	extsb r5, r0
/* 80037130 000330B0  7C C0 07 74 */	extsb r0, r6
/* 80037134 000330B4  7C 00 28 00 */	cmpw r0, r5
/* 80037138 000330B8  40 80 00 30 */	bge .L_80037168
/* 8003713C 000330BC  7C A6 2B 78 */	mr r6, r5
/* 80037140 000330C0  48 00 00 28 */	b .L_80037168
.L_80037144:
/* 80037144 000330C4  7C E0 07 75 */	extsb. r0, r7
/* 80037148 000330C8  40 80 00 20 */	bge .L_80037168
/* 8003714C 000330CC  7C E5 07 74 */	extsb r5, r7
/* 80037150 000330D0  38 05 00 7F */	addi r0, r5, 0x7f
/* 80037154 000330D4  7C 05 07 74 */	extsb r5, r0
/* 80037158 000330D8  7C C0 07 74 */	extsb r0, r6
/* 8003715C 000330DC  7C 05 00 00 */	cmpw r5, r0
/* 80037160 000330E0  40 80 00 08 */	bge .L_80037168
/* 80037164 000330E4  7C A6 2B 78 */	mr r6, r5
.L_80037168:
/* 80037168 000330E8  7C C7 30 50 */	subf r6, r7, r6
/* 8003716C 000330EC  98 C4 00 03 */	stb r6, 0x3(r4)
/* 80037170 000330F0  88 E3 00 04 */	lbz r7, 0x4(r3)
/* 80037174 000330F4  88 C4 00 04 */	lbz r6, 0x4(r4)
/* 80037178 000330F8  7C E0 07 75 */	extsb. r0, r7
/* 8003717C 000330FC  40 81 00 24 */	ble .L_800371A0
/* 80037180 00033100  7C E5 07 74 */	extsb r5, r7
/* 80037184 00033104  38 05 FF 80 */	addi r0, r5, -0x80
/* 80037188 00033108  7C 05 07 74 */	extsb r5, r0
/* 8003718C 0003310C  7C C0 07 74 */	extsb r0, r6
/* 80037190 00033110  7C 00 28 00 */	cmpw r0, r5
/* 80037194 00033114  40 80 00 30 */	bge .L_800371C4
/* 80037198 00033118  7C A6 2B 78 */	mr r6, r5
/* 8003719C 0003311C  48 00 00 28 */	b .L_800371C4
.L_800371A0:
/* 800371A0 00033120  7C E0 07 75 */	extsb. r0, r7
/* 800371A4 00033124  40 80 00 20 */	bge .L_800371C4
/* 800371A8 00033128  7C E5 07 74 */	extsb r5, r7
/* 800371AC 0003312C  38 05 00 7F */	addi r0, r5, 0x7f
/* 800371B0 00033130  7C 05 07 74 */	extsb r5, r0
/* 800371B4 00033134  7C C0 07 74 */	extsb r0, r6
/* 800371B8 00033138  7C 05 00 00 */	cmpw r5, r0
/* 800371BC 0003313C  40 80 00 08 */	bge .L_800371C4
/* 800371C0 00033140  7C A6 2B 78 */	mr r6, r5
.L_800371C4:
/* 800371C4 00033144  7C C7 30 50 */	subf r6, r7, r6
/* 800371C8 00033148  98 C4 00 04 */	stb r6, 0x4(r4)
/* 800371CC 0003314C  88 E3 00 05 */	lbz r7, 0x5(r3)
/* 800371D0 00033150  88 C4 00 05 */	lbz r6, 0x5(r4)
/* 800371D4 00033154  7C E0 07 75 */	extsb. r0, r7
/* 800371D8 00033158  40 81 00 24 */	ble .L_800371FC
/* 800371DC 0003315C  7C E5 07 74 */	extsb r5, r7
/* 800371E0 00033160  38 05 FF 80 */	addi r0, r5, -0x80
/* 800371E4 00033164  7C 05 07 74 */	extsb r5, r0
/* 800371E8 00033168  7C C0 07 74 */	extsb r0, r6
/* 800371EC 0003316C  7C 00 28 00 */	cmpw r0, r5
/* 800371F0 00033170  40 80 00 30 */	bge .L_80037220
/* 800371F4 00033174  7C A6 2B 78 */	mr r6, r5
/* 800371F8 00033178  48 00 00 28 */	b .L_80037220
.L_800371FC:
/* 800371FC 0003317C  7C E0 07 75 */	extsb. r0, r7
/* 80037200 00033180  40 80 00 20 */	bge .L_80037220
/* 80037204 00033184  7C E5 07 74 */	extsb r5, r7
/* 80037208 00033188  38 05 00 7F */	addi r0, r5, 0x7f
/* 8003720C 0003318C  7C 05 07 74 */	extsb r5, r0
/* 80037210 00033190  7C C0 07 74 */	extsb r0, r6
/* 80037214 00033194  7C 05 00 00 */	cmpw r5, r0
/* 80037218 00033198  40 80 00 08 */	bge .L_80037220
/* 8003721C 0003319C  7C A6 2B 78 */	mr r6, r5
.L_80037220:
/* 80037220 000331A0  7C C7 30 50 */	subf r6, r7, r6
/* 80037224 000331A4  98 C4 00 05 */	stb r6, 0x5(r4)
/* 80037228 000331A8  88 03 00 06 */	lbz r0, 0x6(r3)
/* 8003722C 000331AC  88 A4 00 06 */	lbz r5, 0x6(r4)
/* 80037230 000331B0  7C 05 00 40 */	cmplw r5, r0
/* 80037234 000331B4  40 80 00 08 */	bge .L_8003723C
/* 80037238 000331B8  7C 05 03 78 */	mr r5, r0
.L_8003723C:
/* 8003723C 000331BC  7C A0 28 50 */	subf r5, r0, r5
/* 80037240 000331C0  98 A4 00 06 */	stb r5, 0x6(r4)
/* 80037244 000331C4  88 03 00 07 */	lbz r0, 0x7(r3)
/* 80037248 000331C8  88 64 00 07 */	lbz r3, 0x7(r4)
/* 8003724C 000331CC  7C 03 00 40 */	cmplw r3, r0
/* 80037250 000331D0  40 80 00 08 */	bge .L_80037258
/* 80037254 000331D4  7C 03 03 78 */	mr r3, r0
.L_80037258:
/* 80037258 000331D8  7C 60 18 50 */	subf r3, r0, r3
/* 8003725C 000331DC  98 64 00 07 */	stb r3, 0x7(r4)
/* 80037260 000331E0  4E 80 00 20 */	blr
.endfn SPEC2_MakeStatus

.fn OnReset, local
/* 80037264 000331E4  7C 08 02 A6 */	mflr r0
/* 80037268 000331E8  90 01 00 04 */	stw r0, 0x4(r1)
/* 8003726C 000331EC  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 80037270 000331F0  93 E1 00 24 */	stw r31, 0x24(r1)
/* 80037274 000331F4  93 C1 00 20 */	stw r30, 0x20(r1)
/* 80037278 000331F8  3B C3 00 00 */	addi r30, r3, 0x0
/* 8003727C 000331FC  80 0D 86 1C */	lwz r0, SamplingCallback@sda21(r13)
/* 80037280 00033200  28 00 00 00 */	cmplwi r0, 0x0
/* 80037284 00033204  41 82 00 0C */	beq .L_80037290
/* 80037288 00033208  38 60 00 00 */	li r3, 0x0
/* 8003728C 0003320C  48 00 01 C9 */	bl PADSetSamplingCallback
.L_80037290:
/* 80037290 00033210  2C 1E 00 00 */	cmpwi r30, 0x0
/* 80037294 00033214  40 82 01 3C */	bne .L_800373D0
/* 80037298 00033218  80 0D 86 08 */	lwz r0, ResettingBits@sda21(r13)
/* 8003729C 0003321C  3B C0 00 00 */	li r30, 0x0
/* 800372A0 00033220  38 7E 00 00 */	addi r3, r30, 0x0
/* 800372A4 00033224  28 00 00 00 */	cmplwi r0, 0x0
/* 800372A8 00033228  40 82 00 14 */	bne .L_800372BC
/* 800372AC 0003322C  80 0D 82 68 */	lwz r0, ResettingChan@sda21(r13)
/* 800372B0 00033230  2C 00 00 20 */	cmpwi r0, 0x20
/* 800372B4 00033234  40 82 00 08 */	bne .L_800372BC
/* 800372B8 00033238  38 60 00 01 */	li r3, 0x1
.L_800372BC:
/* 800372BC 0003323C  2C 03 00 00 */	cmpwi r3, 0x0
/* 800372C0 00033240  41 82 00 14 */	beq .L_800372D4
/* 800372C4 00033244  4B FF 58 29 */	bl SIBusy
/* 800372C8 00033248  2C 03 00 00 */	cmpwi r3, 0x0
/* 800372CC 0003324C  40 82 00 08 */	bne .L_800372D4
/* 800372D0 00033250  3B C0 00 01 */	li r30, 0x1
.L_800372D4:
/* 800372D4 00033254  80 0D 86 20 */	lwz r0, "recalibrated$404"@sda21(r13)
/* 800372D8 00033258  2C 00 00 00 */	cmpwi r0, 0x0
/* 800372DC 0003325C  40 82 00 EC */	bne .L_800373C8
/* 800372E0 00033260  2C 1E 00 00 */	cmpwi r30, 0x0
/* 800372E4 00033264  41 82 00 E4 */	beq .L_800373C8
/* 800372E8 00033268  3F C0 F0 00 */	lis r30, 0xf000
/* 800372EC 0003326C  4B FF 3C F9 */	bl OSDisableInterrupts
/* 800372F0 00033270  3C 80 80 00 */	lis r4, 0x800030E3@ha
/* 800372F4 00033274  80 AD 86 18 */	lwz r5, PendingBits@sda21(r13)
/* 800372F8 00033278  88 04 30 E3 */	lbz r0, 0x800030E3@l(r4)
/* 800372FC 0003327C  38 E0 00 00 */	li r7, 0x0
/* 80037300 00033280  80 CD 86 10 */	lwz r6, WaitingBits@sda21(r13)
/* 80037304 00033284  7F DE 2B 78 */	or r30, r30, r5
/* 80037308 00033288  80 8D 86 14 */	lwz r4, CheckingBits@sda21(r13)
/* 8003730C 0003328C  80 AD 86 08 */	lwz r5, ResettingBits@sda21(r13)
/* 80037310 00033290  54 00 06 73 */	rlwinm. r0, r0, 0, 25, 25
/* 80037314 00033294  7C C4 23 78 */	or r4, r6, r4
/* 80037318 00033298  90 ED 86 18 */	stw r7, PendingBits@sda21(r13)
/* 8003731C 0003329C  7F DE 20 78 */	andc r30, r30, r4
/* 80037320 000332A0  80 8D 86 04 */	lwz r4, EnabledBits@sda21(r13)
/* 80037324 000332A4  7C A5 F3 78 */	or r5, r5, r30
/* 80037328 000332A8  90 AD 86 08 */	stw r5, ResettingBits@sda21(r13)
/* 8003732C 000332AC  7C 7F 1B 78 */	mr r31, r3
/* 80037330 000332B0  7C 84 F0 78 */	andc r4, r4, r30
/* 80037334 000332B4  90 8D 86 04 */	stw r4, EnabledBits@sda21(r13)
/* 80037338 000332B8  40 82 00 10 */	bne .L_80037348
/* 8003733C 000332BC  80 0D 86 0C */	lwz r0, RecalibrateBits@sda21(r13)
/* 80037340 000332C0  7C 00 F3 78 */	or r0, r0, r30
/* 80037344 000332C4  90 0D 86 0C */	stw r0, RecalibrateBits@sda21(r13)
.L_80037348:
/* 80037348 000332C8  80 6D 86 08 */	lwz r3, ResettingBits@sda21(r13)
/* 8003734C 000332CC  4B FF 64 79 */	bl SIDisablePolling
/* 80037350 000332D0  80 0D 82 68 */	lwz r0, ResettingChan@sda21(r13)
/* 80037354 000332D4  2C 00 00 20 */	cmpwi r0, 0x20
/* 80037358 000332D8  40 82 00 58 */	bne .L_800373B0
/* 8003735C 000332DC  80 AD 86 08 */	lwz r5, ResettingBits@sda21(r13)
/* 80037360 000332E0  7C A0 00 34 */	cntlzw r0, r5
/* 80037364 000332E4  90 0D 82 68 */	stw r0, ResettingChan@sda21(r13)
/* 80037368 000332E8  80 8D 82 68 */	lwz r4, ResettingChan@sda21(r13)
/* 8003736C 000332EC  2C 04 00 20 */	cmpwi r4, 0x20
/* 80037370 000332F0  41 82 00 40 */	beq .L_800373B0
/* 80037374 000332F4  3C 00 80 00 */	lis r0, 0x8000
/* 80037378 000332F8  7C 00 24 30 */	srw r0, r0, r4
/* 8003737C 000332FC  7C A0 00 78 */	andc r0, r5, r0
/* 80037380 00033300  1C 84 00 0C */	mulli r4, r4, 0xc
/* 80037384 00033304  90 0D 86 08 */	stw r0, ResettingBits@sda21(r13)
/* 80037388 00033308  3C 60 80 08 */	lis r3, Origin@ha
/* 8003738C 0003330C  38 03 10 A0 */	addi r0, r3, Origin@l
/* 80037390 00033310  7C 60 22 14 */	add r3, r0, r4
/* 80037394 00033314  38 80 00 00 */	li r4, 0x0
/* 80037398 00033318  38 A0 00 0C */	li r5, 0xc
/* 8003739C 0003331C  4B FC DF 91 */	bl memset
/* 800373A0 00033320  3C 80 80 03 */	lis r4, PADTypeAndStatusCallback@ha
/* 800373A4 00033324  80 6D 82 68 */	lwz r3, ResettingChan@sda21(r13)
/* 800373A8 00033328  38 84 5F 60 */	addi r4, r4, PADTypeAndStatusCallback@l
/* 800373AC 0003332C  4B FF 6D 01 */	bl SIGetTypeAsync
.L_800373B0:
/* 800373B0 00033330  7F E3 FB 78 */	mr r3, r31
/* 800373B4 00033334  4B FF 3C 59 */	bl OSRestoreInterrupts
/* 800373B8 00033338  38 00 00 01 */	li r0, 0x1
/* 800373BC 0003333C  90 0D 86 20 */	stw r0, "recalibrated$404"@sda21(r13)
/* 800373C0 00033340  38 60 00 00 */	li r3, 0x0
/* 800373C4 00033344  48 00 00 18 */	b .L_800373DC
.L_800373C8:
/* 800373C8 00033348  7F C3 F3 78 */	mr r3, r30
/* 800373CC 0003334C  48 00 00 10 */	b .L_800373DC
.L_800373D0:
/* 800373D0 00033350  38 00 00 00 */	li r0, 0x0
/* 800373D4 00033354  90 0D 86 20 */	stw r0, "recalibrated$404"@sda21(r13)
/* 800373D8 00033358  38 60 00 01 */	li r3, 0x1
.L_800373DC:
/* 800373DC 0003335C  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 800373E0 00033360  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 800373E4 00033364  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 800373E8 00033368  7C 08 03 A6 */	mtlr r0
/* 800373EC 0003336C  38 21 00 28 */	addi r1, r1, 0x28
/* 800373F0 00033370  4E 80 00 20 */	blr
.endfn OnReset

.fn SamplingHandler, local
/* 800373F4 00033374  7C 08 02 A6 */	mflr r0
/* 800373F8 00033378  90 01 00 04 */	stw r0, 0x4(r1)
/* 800373FC 0003337C  94 21 FD 20 */	stwu r1, -0x2e0(r1)
/* 80037400 00033380  93 E1 02 DC */	stw r31, 0x2dc(r1)
/* 80037404 00033384  3B E4 00 00 */	addi r31, r4, 0x0
/* 80037408 00033388  80 0D 86 1C */	lwz r0, SamplingCallback@sda21(r13)
/* 8003740C 0003338C  28 00 00 00 */	cmplwi r0, 0x0
/* 80037410 00033390  41 82 00 30 */	beq .L_80037440
/* 80037414 00033394  38 61 00 10 */	addi r3, r1, 0x10
/* 80037418 00033398  4B FF 23 79 */	bl OSClearContext
/* 8003741C 0003339C  38 61 00 10 */	addi r3, r1, 0x10
/* 80037420 000333A0  4B FF 21 A9 */	bl OSSetCurrentContext
/* 80037424 000333A4  81 8D 86 1C */	lwz r12, SamplingCallback@sda21(r13)
/* 80037428 000333A8  7D 88 03 A6 */	mtlr r12
/* 8003742C 000333AC  4E 80 00 21 */	blrl
/* 80037430 000333B0  38 61 00 10 */	addi r3, r1, 0x10
/* 80037434 000333B4  4B FF 23 5D */	bl OSClearContext
/* 80037438 000333B8  7F E3 FB 78 */	mr r3, r31
/* 8003743C 000333BC  4B FF 21 8D */	bl OSSetCurrentContext
.L_80037440:
/* 80037440 000333C0  80 01 02 E4 */	lwz r0, 0x2e4(r1)
/* 80037444 000333C4  83 E1 02 DC */	lwz r31, 0x2dc(r1)
/* 80037448 000333C8  38 21 02 E0 */	addi r1, r1, 0x2e0
/* 8003744C 000333CC  7C 08 03 A6 */	mtlr r0
/* 80037450 000333D0  4E 80 00 20 */	blr
.endfn SamplingHandler

.fn PADSetSamplingCallback, global
/* 80037454 000333D4  7C 08 02 A6 */	mflr r0
/* 80037458 000333D8  28 03 00 00 */	cmplwi r3, 0x0
/* 8003745C 000333DC  90 01 00 04 */	stw r0, 0x4(r1)
/* 80037460 000333E0  94 21 FF F8 */	stwu r1, -0x8(r1)
/* 80037464 000333E4  90 6D 86 1C */	stw r3, SamplingCallback@sda21(r13)
/* 80037468 000333E8  41 82 00 14 */	beq .L_8003747C
/* 8003746C 000333EC  3C 60 80 03 */	lis r3, SamplingHandler@ha
/* 80037470 000333F0  38 63 73 F4 */	addi r3, r3, SamplingHandler@l
/* 80037474 000333F4  4B FF 5C C1 */	bl SIRegisterPollingHandler
/* 80037478 000333F8  48 00 00 10 */	b .L_80037488
.L_8003747C:
/* 8003747C 000333FC  3C 60 80 03 */	lis r3, SamplingHandler@ha
/* 80037480 00033400  38 63 73 F4 */	addi r3, r3, SamplingHandler@l
/* 80037484 00033404  4B FF 5D 95 */	bl SIUnregisterPollingHandler
.L_80037488:
/* 80037488 00033408  80 01 00 0C */	lwz r0, 0xc(r1)
/* 8003748C 0003340C  38 21 00 08 */	addi r1, r1, 0x8
/* 80037490 00033410  7C 08 03 A6 */	mtlr r0
/* 80037494 00033414  4E 80 00 20 */	blr
.endfn PADSetSamplingCallback

.section .data, "wa"  # 0x80065000 - 0x8006D1C0

.balign 8


.obj ResetFunctionInfo, local
	.4byte OnReset
	.4byte 0x0000007F
	.4byte 0
	.4byte 0
.endobj ResetFunctionInfo

.obj XYNTSC, local
	.4byte 0xF7020E13
	.4byte 0x1D092507
	.4byte 0x34054104
	.4byte 0x57035703
	.4byte 0x57038302
	.4byte 0x83028302
.endobj XYNTSC

.obj XYPAL, local
	.4byte 0x94030D18
	.4byte 0x1A0C2708
	.4byte 0x34063E05
	.4byte 0x4E046803
	.4byte 0x68036803
	.4byte 0x68039C02
.endobj XYPAL

	.asciz "PADSetSamplingRate: unknown TV format"
	.balign 4

.section .sdata, "wa"  # 0x800A8A80 - 0x800A8DC0

.balign 8

.obj ResettingChan, local
	.4byte 0x00000020
.endobj ResettingChan

.obj XPatchBits, local
	.4byte 0xF0000000
.endobj XPatchBits

.obj AnalogMode, local
	.4byte 0x00000300
.endobj AnalogMode

.obj Spec, local
	.4byte 0x00000005
.endobj Spec

.obj MakeStatus, local
	.4byte SPEC2_MakeStatus
.endobj MakeStatus

.obj CmdReadOrigin, local
	.4byte 0x41000000
.endobj CmdReadOrigin

.obj CmdCalibrate, local
	.4byte 0x42000000
.endobj CmdCalibrate

.obj lbl_800A8D04, local
	.asciz "Pad.c"
	.balign 4
	.4byte 0
.endobj lbl_800A8D04

.section .bss, "", @nobits  # 0x8006D1C0 - 0x800A8A80

.balign 8

.obj Type, local
	.skip 0x10
.endobj Type

.obj Origin, local
	.skip 0x30
.endobj Origin

.obj CmdProbeDevice, local
	.skip 0x10
.endobj CmdProbeDevice

.section .sbss, "", @nobits  # 0x800A8DC0 - 0x800A9380

.balign 8

.obj Initialized, local
	.skip 0x4
.endobj Initialized

.obj EnabledBits, local
	.skip 0x4
.endobj EnabledBits

.obj ResettingBits, local
	.skip 0x4
.endobj ResettingBits

.obj RecalibrateBits, local
	.skip 0x4
.endobj RecalibrateBits

.obj WaitingBits, local
	.skip 0x4
.endobj WaitingBits

.obj CheckingBits, local
	.skip 0x4
.endobj CheckingBits

.obj PendingBits, local
	.skip 0x4
.endobj PendingBits

.obj SamplingCallback, local
	.skip 0x4
.endobj SamplingCallback

.obj "recalibrated$404", local
	.skip 0x4
.endobj "recalibrated$404"

.obj __PADSpec, global
	.skip 0x4
.endobj __PADSpec
