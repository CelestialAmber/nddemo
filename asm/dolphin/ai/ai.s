.include "macros.inc"

.section .text, "ax"  # 0x800065A0 - 0x80063CE0 ; 0x0005D740

.fn AIRegisterDMACallback, global
/* 80037498 00033418  7C 08 02 A6 */	mflr r0
/* 8003749C 0003341C  90 01 00 04 */	stw r0, 0x4(r1)
/* 800374A0 00033420  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 800374A4 00033424  93 E1 00 14 */	stw r31, 0x14(r1)
/* 800374A8 00033428  93 C1 00 10 */	stw r30, 0x10(r1)
/* 800374AC 0003342C  7C 7E 1B 78 */	mr r30, r3
/* 800374B0 00033430  83 ED 86 2C */	lwz r31, __AID_Callback@sda21(r13)
/* 800374B4 00033434  4B FF 3B 31 */	bl OSDisableInterrupts
/* 800374B8 00033438  93 CD 86 2C */	stw r30, __AID_Callback@sda21(r13)
/* 800374BC 0003343C  4B FF 3B 51 */	bl OSRestoreInterrupts
/* 800374C0 00033440  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 800374C4 00033444  7F E3 FB 78 */	mr r3, r31
/* 800374C8 00033448  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 800374CC 0003344C  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 800374D0 00033450  7C 08 03 A6 */	mtlr r0
/* 800374D4 00033454  38 21 00 18 */	addi r1, r1, 0x18
/* 800374D8 00033458  4E 80 00 20 */	blr
.endfn AIRegisterDMACallback

.fn AIInitDMA, global
/* 800374DC 0003345C  7C 08 02 A6 */	mflr r0
/* 800374E0 00033460  90 01 00 04 */	stw r0, 0x4(r1)
/* 800374E4 00033464  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 800374E8 00033468  93 E1 00 14 */	stw r31, 0x14(r1)
/* 800374EC 0003346C  3B E4 00 00 */	addi r31, r4, 0x0
/* 800374F0 00033470  93 C1 00 10 */	stw r30, 0x10(r1)
/* 800374F4 00033474  3B C3 00 00 */	addi r30, r3, 0x0
/* 800374F8 00033478  4B FF 3A ED */	bl OSDisableInterrupts
/* 800374FC 0003347C  3C 80 CC 00 */	lis r4, 0xCC005030@ha
/* 80037500 00033480  A0 04 50 30 */	lhz r0, 0xCC005030@l(r4)
/* 80037504 00033484  38 A4 50 00 */	addi r5, r4, 0x5000
/* 80037508 00033488  38 C4 50 00 */	addi r6, r4, 0x5000
/* 8003750C 0003348C  38 E4 50 00 */	addi r7, r4, 0x5000
/* 80037510 00033490  54 04 00 2A */	clrrwi r4, r0, 10
/* 80037514 00033494  57 C0 84 3E */	srwi r0, r30, 16
/* 80037518 00033498  7C 80 03 78 */	or r0, r4, r0
/* 8003751C 0003349C  B0 05 00 30 */	sth r0, 0x30(r5)
/* 80037520 000334A0  57 C0 04 3E */	clrlwi r0, r30, 16
/* 80037524 000334A4  A0 86 00 32 */	lhz r4, 0x32(r6)
/* 80037528 000334A8  54 84 06 DE */	rlwinm r4, r4, 0, 27, 15
/* 8003752C 000334AC  7C 80 03 78 */	or r0, r4, r0
/* 80037530 000334B0  B0 06 00 32 */	sth r0, 0x32(r6)
/* 80037534 000334B4  57 E0 DC 3E */	extrwi r0, r31, 16, 11
/* 80037538 000334B8  A0 87 00 36 */	lhz r4, 0x36(r7)
/* 8003753C 000334BC  54 84 00 20 */	clrrwi r4, r4, 15
/* 80037540 000334C0  7C 80 03 78 */	or r0, r4, r0
/* 80037544 000334C4  B0 07 00 36 */	sth r0, 0x36(r7)
/* 80037548 000334C8  4B FF 3A C5 */	bl OSRestoreInterrupts
/* 8003754C 000334CC  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 80037550 000334D0  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 80037554 000334D4  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 80037558 000334D8  7C 08 03 A6 */	mtlr r0
/* 8003755C 000334DC  38 21 00 18 */	addi r1, r1, 0x18
/* 80037560 000334E0  4E 80 00 20 */	blr
.endfn AIInitDMA

.fn AIStartDMA, global
/* 80037564 000334E4  3C 60 CC 00 */	lis r3, 0xCC005000@ha
/* 80037568 000334E8  38 63 50 00 */	addi r3, r3, 0xCC005000@l
/* 8003756C 000334EC  A0 03 00 36 */	lhz r0, 0x36(r3)
/* 80037570 000334F0  60 00 80 00 */	ori r0, r0, 0x8000
/* 80037574 000334F4  B0 03 00 36 */	sth r0, 0x36(r3)
/* 80037578 000334F8  4E 80 00 20 */	blr
.endfn AIStartDMA

.fn AIStopDMA, global
/* 8003757C 000334FC  3C 60 CC 00 */	lis r3, 0xCC005000@ha
/* 80037580 00033500  38 63 50 00 */	addi r3, r3, 0xCC005000@l
/* 80037584 00033504  A0 03 00 36 */	lhz r0, 0x36(r3)
/* 80037588 00033508  54 00 04 5E */	rlwinm r0, r0, 0, 17, 15
/* 8003758C 0003350C  B0 03 00 36 */	sth r0, 0x36(r3)
/* 80037590 00033510  4E 80 00 20 */	blr
.endfn AIStopDMA

.fn AISetStreamPlayState, global
/* 80037594 00033514  7C 08 02 A6 */	mflr r0
/* 80037598 00033518  90 01 00 04 */	stw r0, 0x4(r1)
/* 8003759C 0003351C  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800375A0 00033520  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800375A4 00033524  93 C1 00 18 */	stw r30, 0x18(r1)
/* 800375A8 00033528  93 A1 00 14 */	stw r29, 0x14(r1)
/* 800375AC 0003352C  7C 7D 1B 78 */	mr r29, r3
/* 800375B0 00033530  48 00 00 BD */	bl AIGetStreamPlayState
/* 800375B4 00033534  7C 1D 18 40 */	cmplw r29, r3
/* 800375B8 00033538  41 82 00 98 */	beq .L_80037650
/* 800375BC 0003353C  48 00 02 89 */	bl AIGetStreamSampleRate
/* 800375C0 00033540  28 03 00 00 */	cmplwi r3, 0x0
/* 800375C4 00033544  40 82 00 78 */	bne .L_8003763C
/* 800375C8 00033548  28 1D 00 01 */	cmplwi r29, 0x1
/* 800375CC 0003354C  40 82 00 70 */	bne .L_8003763C
/* 800375D0 00033550  48 00 02 CD */	bl AIGetStreamVolRight
/* 800375D4 00033554  7C 7E 1B 78 */	mr r30, r3
/* 800375D8 00033558  48 00 02 99 */	bl AIGetStreamVolLeft
/* 800375DC 0003355C  3B A3 00 00 */	addi r29, r3, 0x0
/* 800375E0 00033560  38 60 00 00 */	li r3, 0x0
/* 800375E4 00033564  48 00 02 9D */	bl AISetStreamVolRight
/* 800375E8 00033568  38 60 00 00 */	li r3, 0x0
/* 800375EC 0003356C  48 00 02 69 */	bl AISetStreamVolLeft
/* 800375F0 00033570  4B FF 39 F5 */	bl OSDisableInterrupts
/* 800375F4 00033574  7C 7F 1B 78 */	mr r31, r3
/* 800375F8 00033578  48 00 05 7D */	bl __AI_SRC_INIT
/* 800375FC 0003357C  3C 80 CC 00 */	lis r4, 0xCC006C00@ha
/* 80037600 00033580  80 04 6C 00 */	lwz r0, 0xCC006C00@l(r4)
/* 80037604 00033584  38 7F 00 00 */	addi r3, r31, 0x0
/* 80037608 00033588  54 00 06 F2 */	rlwinm r0, r0, 0, 27, 25
/* 8003760C 0003358C  60 00 00 20 */	ori r0, r0, 0x20
/* 80037610 00033590  90 04 6C 00 */	stw r0, 0x6c00(r4)
/* 80037614 00033594  80 04 6C 00 */	lwz r0, 0x6c00(r4)
/* 80037618 00033598  54 00 00 3C */	clrrwi r0, r0, 1
/* 8003761C 0003359C  60 00 00 01 */	ori r0, r0, 0x1
/* 80037620 000335A0  90 04 6C 00 */	stw r0, 0x6c00(r4)
/* 80037624 000335A4  4B FF 39 E9 */	bl OSRestoreInterrupts
/* 80037628 000335A8  7F C3 F3 78 */	mr r3, r30
/* 8003762C 000335AC  48 00 02 29 */	bl AISetStreamVolLeft
/* 80037630 000335B0  7F A3 EB 78 */	mr r3, r29
/* 80037634 000335B4  48 00 02 4D */	bl AISetStreamVolRight
/* 80037638 000335B8  48 00 00 18 */	b .L_80037650
.L_8003763C:
/* 8003763C 000335BC  3C 60 CC 00 */	lis r3, 0xCC006C00@ha
/* 80037640 000335C0  80 03 6C 00 */	lwz r0, 0xCC006C00@l(r3)
/* 80037644 000335C4  54 00 00 3C */	clrrwi r0, r0, 1
/* 80037648 000335C8  7C 00 EB 78 */	or r0, r0, r29
/* 8003764C 000335CC  90 03 6C 00 */	stw r0, 0x6c00(r3)
.L_80037650:
/* 80037650 000335D0  80 01 00 24 */	lwz r0, 0x24(r1)
/* 80037654 000335D4  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 80037658 000335D8  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 8003765C 000335DC  7C 08 03 A6 */	mtlr r0
/* 80037660 000335E0  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 80037664 000335E4  38 21 00 20 */	addi r1, r1, 0x20
/* 80037668 000335E8  4E 80 00 20 */	blr
.endfn AISetStreamPlayState

.fn AIGetStreamPlayState, global
/* 8003766C 000335EC  3C 60 CC 00 */	lis r3, 0xCC006C00@ha
/* 80037670 000335F0  80 03 6C 00 */	lwz r0, 0xCC006C00@l(r3)
/* 80037674 000335F4  54 03 07 FE */	clrlwi r3, r0, 31
/* 80037678 000335F8  4E 80 00 20 */	blr
.endfn AIGetStreamPlayState

.fn AISetDSPSampleRate, global
/* 8003767C 000335FC  7C 08 02 A6 */	mflr r0
/* 80037680 00033600  90 01 00 04 */	stw r0, 0x4(r1)
/* 80037684 00033604  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 80037688 00033608  BF 41 00 10 */	stmw r26, 0x10(r1)
/* 8003768C 0003360C  7C 7A 1B 78 */	mr r26, r3
/* 80037690 00033610  48 00 00 CD */	bl AIGetDSPSampleRate
/* 80037694 00033614  7C 1A 18 40 */	cmplw r26, r3
/* 80037698 00033618  41 82 00 B0 */	beq .L_80037748
/* 8003769C 0003361C  3F E0 CC 00 */	lis r31, 0xCC006C00@ha
/* 800376A0 00033620  80 1F 6C 00 */	lwz r0, 0xCC006C00@l(r31)
/* 800376A4 00033624  28 1A 00 00 */	cmplwi r26, 0x0
/* 800376A8 00033628  54 00 06 B0 */	rlwinm r0, r0, 0, 26, 24
/* 800376AC 0003362C  90 1F 6C 00 */	stw r0, 0x6c00(r31)
/* 800376B0 00033630  40 82 00 98 */	bne .L_80037748
/* 800376B4 00033634  48 00 01 BD */	bl AIGetStreamVolLeft
/* 800376B8 00033638  7C 7E 1B 78 */	mr r30, r3
/* 800376BC 0003363C  48 00 01 E1 */	bl AIGetStreamVolRight
/* 800376C0 00033640  80 1F 6C 00 */	lwz r0, 0x6c00(r31)
/* 800376C4 00033644  3B A3 00 00 */	addi r29, r3, 0x0
/* 800376C8 00033648  54 1B 07 FE */	clrlwi r27, r0, 31
/* 800376CC 0003364C  48 00 01 79 */	bl AIGetStreamSampleRate
/* 800376D0 00033650  3B 83 00 00 */	addi r28, r3, 0x0
/* 800376D4 00033654  38 60 00 00 */	li r3, 0x0
/* 800376D8 00033658  48 00 01 7D */	bl AISetStreamVolLeft
/* 800376DC 0003365C  38 60 00 00 */	li r3, 0x0
/* 800376E0 00033660  48 00 01 A1 */	bl AISetStreamVolRight
/* 800376E4 00033664  4B FF 39 01 */	bl OSDisableInterrupts
/* 800376E8 00033668  7C 7A 1B 78 */	mr r26, r3
/* 800376EC 0003366C  48 00 04 89 */	bl __AI_SRC_INIT
/* 800376F0 00033670  80 9F 6C 00 */	lwz r4, 0x6c00(r31)
/* 800376F4 00033674  57 80 08 3C */	slwi r0, r28, 1
/* 800376F8 00033678  38 7A 00 00 */	addi r3, r26, 0x0
/* 800376FC 0003367C  54 84 06 F2 */	rlwinm r4, r4, 0, 27, 25
/* 80037700 00033680  60 84 00 20 */	ori r4, r4, 0x20
/* 80037704 00033684  90 9F 6C 00 */	stw r4, 0x6c00(r31)
/* 80037708 00033688  80 9F 6C 00 */	lwz r4, 0x6c00(r31)
/* 8003770C 0003368C  54 84 07 FA */	rlwinm r4, r4, 0, 31, 29
/* 80037710 00033690  7C 80 03 78 */	or r0, r4, r0
/* 80037714 00033694  90 1F 6C 00 */	stw r0, 0x6c00(r31)
/* 80037718 00033698  80 1F 6C 00 */	lwz r0, 0x6c00(r31)
/* 8003771C 0003369C  54 00 00 3C */	clrrwi r0, r0, 1
/* 80037720 000336A0  7C 00 DB 78 */	or r0, r0, r27
/* 80037724 000336A4  90 1F 6C 00 */	stw r0, 0x6c00(r31)
/* 80037728 000336A8  80 1F 6C 00 */	lwz r0, 0x6c00(r31)
/* 8003772C 000336AC  60 00 00 40 */	ori r0, r0, 0x40
/* 80037730 000336B0  90 1F 6C 00 */	stw r0, 0x6c00(r31)
/* 80037734 000336B4  4B FF 38 D9 */	bl OSRestoreInterrupts
/* 80037738 000336B8  7F C3 F3 78 */	mr r3, r30
/* 8003773C 000336BC  48 00 01 19 */	bl AISetStreamVolLeft
/* 80037740 000336C0  7F A3 EB 78 */	mr r3, r29
/* 80037744 000336C4  48 00 01 3D */	bl AISetStreamVolRight
.L_80037748:
/* 80037748 000336C8  BB 41 00 10 */	lmw r26, 0x10(r1)
/* 8003774C 000336CC  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 80037750 000336D0  38 21 00 28 */	addi r1, r1, 0x28
/* 80037754 000336D4  7C 08 03 A6 */	mtlr r0
/* 80037758 000336D8  4E 80 00 20 */	blr
.endfn AISetDSPSampleRate

.fn AIGetDSPSampleRate, global
/* 8003775C 000336DC  3C 60 CC 00 */	lis r3, 0xCC006C00@ha
/* 80037760 000336E0  80 03 6C 00 */	lwz r0, 0xCC006C00@l(r3)
/* 80037764 000336E4  54 00 D7 FE */	extrwi r0, r0, 1, 25
/* 80037768 000336E8  68 03 00 01 */	xori r3, r0, 0x1
/* 8003776C 000336EC  4E 80 00 20 */	blr
.endfn AIGetDSPSampleRate

.fn __AI_set_stream_sample_rate, local
/* 80037770 000336F0  7C 08 02 A6 */	mflr r0
/* 80037774 000336F4  90 01 00 04 */	stw r0, 0x4(r1)
/* 80037778 000336F8  94 21 FF D0 */	stwu r1, -0x30(r1)
/* 8003777C 000336FC  BF 21 00 14 */	stmw r25, 0x14(r1)
/* 80037780 00033700  7C 79 1B 78 */	mr r25, r3
/* 80037784 00033704  48 00 00 C1 */	bl AIGetStreamSampleRate
/* 80037788 00033708  7C 19 18 40 */	cmplw r25, r3
/* 8003778C 0003370C  41 82 00 A4 */	beq .L_80037830
/* 80037790 00033710  3F E0 CC 00 */	lis r31, 0xCC006C00@ha
/* 80037794 00033714  80 1F 6C 00 */	lwz r0, 0xCC006C00@l(r31)
/* 80037798 00033718  54 00 07 FE */	clrlwi r0, r0, 31
/* 8003779C 0003371C  7C 1D 03 78 */	mr r29, r0
/* 800377A0 00033720  48 00 00 D1 */	bl AIGetStreamVolLeft
/* 800377A4 00033724  7C 7C 1B 78 */	mr r28, r3
/* 800377A8 00033728  48 00 00 F5 */	bl AIGetStreamVolRight
/* 800377AC 0003372C  3B 63 00 00 */	addi r27, r3, 0x0
/* 800377B0 00033730  38 60 00 00 */	li r3, 0x0
/* 800377B4 00033734  48 00 00 CD */	bl AISetStreamVolRight
/* 800377B8 00033738  38 60 00 00 */	li r3, 0x0
/* 800377BC 0003373C  48 00 00 99 */	bl AISetStreamVolLeft
/* 800377C0 00033740  80 7F 6C 00 */	lwz r3, 0x6c00(r31)
/* 800377C4 00033744  80 1F 6C 00 */	lwz r0, 0x6c00(r31)
/* 800377C8 00033748  54 7A 06 72 */	rlwinm r26, r3, 0, 25, 25
/* 800377CC 0003374C  54 00 06 B0 */	rlwinm r0, r0, 0, 26, 24
/* 800377D0 00033750  90 1F 6C 00 */	stw r0, 0x6c00(r31)
/* 800377D4 00033754  4B FF 38 11 */	bl OSDisableInterrupts
/* 800377D8 00033758  7C 7E 1B 78 */	mr r30, r3
/* 800377DC 0003375C  48 00 03 99 */	bl __AI_SRC_INIT
/* 800377E0 00033760  80 9F 6C 00 */	lwz r4, 0x6c00(r31)
/* 800377E4 00033764  57 20 08 3C */	slwi r0, r25, 1
/* 800377E8 00033768  38 7E 00 00 */	addi r3, r30, 0x0
/* 800377EC 0003376C  7C 84 D3 78 */	or r4, r4, r26
/* 800377F0 00033770  90 9F 6C 00 */	stw r4, 0x6c00(r31)
/* 800377F4 00033774  80 9F 6C 00 */	lwz r4, 0x6c00(r31)
/* 800377F8 00033778  54 84 06 F2 */	rlwinm r4, r4, 0, 27, 25
/* 800377FC 0003377C  60 84 00 20 */	ori r4, r4, 0x20
/* 80037800 00033780  90 9F 6C 00 */	stw r4, 0x6c00(r31)
/* 80037804 00033784  80 9F 6C 00 */	lwz r4, 0x6c00(r31)
/* 80037808 00033788  54 84 07 FA */	rlwinm r4, r4, 0, 31, 29
/* 8003780C 0003378C  7C 80 03 78 */	or r0, r4, r0
/* 80037810 00033790  90 1F 6C 00 */	stw r0, 0x6c00(r31)
/* 80037814 00033794  4B FF 37 F9 */	bl OSRestoreInterrupts
/* 80037818 00033798  7F A3 EB 78 */	mr r3, r29
/* 8003781C 0003379C  4B FF FD 79 */	bl AISetStreamPlayState
/* 80037820 000337A0  7F 83 E3 78 */	mr r3, r28
/* 80037824 000337A4  48 00 00 31 */	bl AISetStreamVolLeft
/* 80037828 000337A8  7F 63 DB 78 */	mr r3, r27
/* 8003782C 000337AC  48 00 00 55 */	bl AISetStreamVolRight
.L_80037830:
/* 80037830 000337B0  BB 21 00 14 */	lmw r25, 0x14(r1)
/* 80037834 000337B4  80 01 00 34 */	lwz r0, 0x34(r1)
/* 80037838 000337B8  38 21 00 30 */	addi r1, r1, 0x30
/* 8003783C 000337BC  7C 08 03 A6 */	mtlr r0
/* 80037840 000337C0  4E 80 00 20 */	blr
.endfn __AI_set_stream_sample_rate

.fn AIGetStreamSampleRate, global
/* 80037844 000337C4  3C 60 CC 00 */	lis r3, 0xCC006C00@ha
/* 80037848 000337C8  80 03 6C 00 */	lwz r0, 0xCC006C00@l(r3)
/* 8003784C 000337CC  54 03 FF FE */	extrwi r3, r0, 1, 30
/* 80037850 000337D0  4E 80 00 20 */	blr
.endfn AIGetStreamSampleRate

.fn AISetStreamVolLeft, global
/* 80037854 000337D4  3C 80 CC 00 */	lis r4, 0xCC006C00@ha
/* 80037858 000337D8  38 84 6C 00 */	addi r4, r4, 0xCC006C00@l
/* 8003785C 000337DC  80 04 00 04 */	lwz r0, 0x4(r4)
/* 80037860 000337E0  54 00 00 2E */	clrrwi r0, r0, 8
/* 80037864 000337E4  50 60 06 3E */	rlwimi r0, r3, 0, 24, 31
/* 80037868 000337E8  90 04 00 04 */	stw r0, 0x4(r4)
/* 8003786C 000337EC  4E 80 00 20 */	blr
.endfn AISetStreamVolLeft

.fn AIGetStreamVolLeft, global
/* 80037870 000337F0  3C 60 CC 00 */	lis r3, 0xCC006C04@ha
/* 80037874 000337F4  80 03 6C 04 */	lwz r0, 0xCC006C04@l(r3)
/* 80037878 000337F8  54 03 06 3E */	clrlwi r3, r0, 24
/* 8003787C 000337FC  4E 80 00 20 */	blr
.endfn AIGetStreamVolLeft

.fn AISetStreamVolRight, global
/* 80037880 00033800  3C 80 CC 00 */	lis r4, 0xCC006C00@ha
/* 80037884 00033804  38 84 6C 00 */	addi r4, r4, 0xCC006C00@l
/* 80037888 00033808  80 04 00 04 */	lwz r0, 0x4(r4)
/* 8003788C 0003380C  54 00 06 1E */	rlwinm r0, r0, 0, 24, 15
/* 80037890 00033810  50 60 44 2E */	rlwimi r0, r3, 8, 16, 23
/* 80037894 00033814  90 04 00 04 */	stw r0, 0x4(r4)
/* 80037898 00033818  4E 80 00 20 */	blr
.endfn AISetStreamVolRight

.fn AIGetStreamVolRight, global
/* 8003789C 0003381C  3C 60 CC 00 */	lis r3, 0xCC006C04@ha
/* 800378A0 00033820  80 03 6C 04 */	lwz r0, 0xCC006C04@l(r3)
/* 800378A4 00033824  54 03 C6 3E */	extrwi r3, r0, 8, 16
/* 800378A8 00033828  4E 80 00 20 */	blr
.endfn AIGetStreamVolRight

.fn AIInit, global
/* 800378AC 0003382C  7C 08 02 A6 */	mflr r0
/* 800378B0 00033830  90 01 00 04 */	stw r0, 0x4(r1)
/* 800378B4 00033834  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 800378B8 00033838  93 E1 00 14 */	stw r31, 0x14(r1)
/* 800378BC 0003383C  93 C1 00 10 */	stw r30, 0x10(r1)
/* 800378C0 00033840  3B C3 00 00 */	addi r30, r3, 0x0
/* 800378C4 00033844  80 0D 86 38 */	lwz r0, __AI_init_flag@sda21(r13)
/* 800378C8 00033848  2C 00 00 01 */	cmpwi r0, 0x1
/* 800378CC 0003384C  41 82 01 2C */	beq .L_800379F8
/* 800378D0 00033850  3C 60 80 00 */	lis r3, 0x800000F8@ha
/* 800378D4 00033854  80 03 00 F8 */	lwz r0, 0x800000F8@l(r3)
/* 800378D8 00033858  3C 60 43 1C */	lis r3, 0x431c
/* 800378DC 0003385C  3C 80 00 01 */	lis r4, 0x1
/* 800378E0 00033860  54 00 F0 BE */	srwi r0, r0, 2
/* 800378E4 00033864  38 63 DE 83 */	addi r3, r3, -0x217d
/* 800378E8 00033868  7C 03 00 16 */	mulhwu r0, r3, r0
/* 800378EC 0003386C  54 09 8B FE */	srwi r9, r0, 15
/* 800378F0 00033870  38 A4 A4 28 */	addi r5, r4, -0x5bd8
/* 800378F4 00033874  38 64 A4 10 */	addi r3, r4, -0x5bf0
/* 800378F8 00033878  38 04 F6 18 */	addi r0, r4, -0x9e8
/* 800378FC 0003387C  3C 80 10 62 */	lis r4, 0x1062
/* 80037900 00033880  7C E9 29 D6 */	mullw r7, r9, r5
/* 80037904 00033884  39 44 4D D3 */	addi r10, r4, 0x4dd3
/* 80037908 00033888  7C A9 19 D6 */	mullw r5, r9, r3
/* 8003790C 0003388C  7C 89 01 D6 */	mullw r4, r9, r0
/* 80037910 00033890  1D 09 7B 24 */	mulli r8, r9, 0x7b24
/* 80037914 00033894  1C 69 0B B8 */	mulli r3, r9, 0xbb8
/* 80037918 00033898  7D 0A 40 16 */	mulhwu r8, r10, r8
/* 8003791C 0003389C  7C EA 38 16 */	mulhwu r7, r10, r7
/* 80037920 000338A0  7C AA 28 16 */	mulhwu r5, r10, r5
/* 80037924 000338A4  7C 8A 20 16 */	mulhwu r4, r10, r4
/* 80037928 000338A8  7C 6A 18 16 */	mulhwu r3, r10, r3
/* 8003792C 000338AC  55 08 BA 7E */	srwi r8, r8, 9
/* 80037930 000338B0  54 E7 BA 7E */	srwi r7, r7, 9
/* 80037934 000338B4  91 0D 86 44 */	stw r8, bound_32KHz+4@sda21(r13)
/* 80037938 000338B8  54 A5 BA 7E */	srwi r5, r5, 9
/* 8003793C 000338BC  54 84 BA 7E */	srwi r4, r4, 9
/* 80037940 000338C0  90 ED 86 4C */	stw r7, bound_48KHz+4@sda21(r13)
/* 80037944 000338C4  3B E0 00 00 */	li r31, 0x0
/* 80037948 000338C8  54 63 BA 7E */	srwi r3, r3, 9
/* 8003794C 000338CC  90 AD 86 54 */	stw r5, min_wait+4@sda21(r13)
/* 80037950 000338D0  3C C0 CC 00 */	lis r6, 0xCC006C00@ha
/* 80037954 000338D4  90 6D 86 64 */	stw r3, buffer+4@sda21(r13)
/* 80037958 000338D8  38 60 00 01 */	li r3, 0x1
/* 8003795C 000338DC  80 06 6C 00 */	lwz r0, 0xCC006C00@l(r6)
/* 80037960 000338E0  90 8D 86 5C */	stw r4, max_wait+4@sda21(r13)
/* 80037964 000338E4  54 00 06 F2 */	rlwinm r0, r0, 0, 27, 25
/* 80037968 000338E8  60 00 00 20 */	ori r0, r0, 0x20
/* 8003796C 000338EC  93 ED 86 40 */	stw r31, bound_32KHz@sda21(r13)
/* 80037970 000338F0  93 ED 86 48 */	stw r31, bound_48KHz@sda21(r13)
/* 80037974 000338F4  93 ED 86 50 */	stw r31, min_wait@sda21(r13)
/* 80037978 000338F8  93 ED 86 58 */	stw r31, max_wait@sda21(r13)
/* 8003797C 000338FC  93 ED 86 60 */	stw r31, buffer@sda21(r13)
/* 80037980 00033900  80 A6 6C 04 */	lwz r5, 0x6c04(r6)
/* 80037984 00033904  90 06 6C 00 */	stw r0, 0x6c00(r6)
/* 80037988 00033908  54 A0 06 1E */	rlwinm r0, r5, 0, 24, 15
/* 8003798C 0003390C  60 00 00 00 */	nop
/* 80037990 00033910  90 06 6C 04 */	stw r0, 0x6c04(r6)
/* 80037994 00033914  80 06 6C 04 */	lwz r0, 0x6c04(r6)
/* 80037998 00033918  54 00 00 2E */	clrrwi r0, r0, 8
/* 8003799C 0003391C  60 00 00 00 */	nop
/* 800379A0 00033920  90 06 6C 04 */	stw r0, 0x6c04(r6)
/* 800379A4 00033924  93 E6 6C 0C */	stw r31, 0x6c0c(r6)
/* 800379A8 00033928  4B FF FD C9 */	bl __AI_set_stream_sample_rate
/* 800379AC 0003392C  38 60 00 00 */	li r3, 0x0
/* 800379B0 00033930  4B FF FC CD */	bl AISetDSPSampleRate
/* 800379B4 00033934  3C 60 80 03 */	lis r3, __AIDHandler@ha
/* 800379B8 00033938  93 ED 86 28 */	stw r31, __AIS_Callback@sda21(r13)
/* 800379BC 0003393C  38 83 7A 8C */	addi r4, r3, __AIDHandler@l
/* 800379C0 00033940  93 ED 86 2C */	stw r31, __AID_Callback@sda21(r13)
/* 800379C4 00033944  38 60 00 05 */	li r3, 0x5
/* 800379C8 00033948  93 CD 86 30 */	stw r30, __CallbackStack@sda21(r13)
/* 800379CC 0003394C  4B FF 36 65 */	bl __OSSetInterruptHandler
/* 800379D0 00033950  3C 60 04 00 */	lis r3, 0x400
/* 800379D4 00033954  4B FF 3A 61 */	bl __OSUnmaskInterrupts
/* 800379D8 00033958  3C 60 80 03 */	lis r3, __AISHandler@ha
/* 800379DC 0003395C  38 83 7A 10 */	addi r4, r3, __AISHandler@l
/* 800379E0 00033960  38 60 00 08 */	li r3, 0x8
/* 800379E4 00033964  4B FF 36 4D */	bl __OSSetInterruptHandler
/* 800379E8 00033968  3C 60 00 80 */	lis r3, 0x80
/* 800379EC 0003396C  4B FF 3A 49 */	bl __OSUnmaskInterrupts
/* 800379F0 00033970  38 00 00 01 */	li r0, 0x1
/* 800379F4 00033974  90 0D 86 38 */	stw r0, __AI_init_flag@sda21(r13)
.L_800379F8:
/* 800379F8 00033978  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 800379FC 0003397C  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 80037A00 00033980  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 80037A04 00033984  7C 08 03 A6 */	mtlr r0
/* 80037A08 00033988  38 21 00 18 */	addi r1, r1, 0x18
/* 80037A0C 0003398C  4E 80 00 20 */	blr
.endfn AIInit

.fn __AISHandler, local
/* 80037A10 00033990  7C 08 02 A6 */	mflr r0
/* 80037A14 00033994  90 01 00 04 */	stw r0, 0x4(r1)
/* 80037A18 00033998  94 21 FD 20 */	stwu r1, -0x2e0(r1)
/* 80037A1C 0003399C  93 E1 02 DC */	stw r31, 0x2dc(r1)
/* 80037A20 000339A0  3F E0 CC 00 */	lis r31, 0xCC006C00@ha
/* 80037A24 000339A4  80 1F 6C 00 */	lwz r0, 0xCC006C00@l(r31)
/* 80037A28 000339A8  38 61 00 10 */	addi r3, r1, 0x10
/* 80037A2C 000339AC  93 C1 02 D8 */	stw r30, 0x2d8(r1)
/* 80037A30 000339B0  60 00 00 08 */	ori r0, r0, 0x8
/* 80037A34 000339B4  90 1F 6C 00 */	stw r0, 0x6c00(r31)
/* 80037A38 000339B8  3B C4 00 00 */	addi r30, r4, 0x0
/* 80037A3C 000339BC  4B FF 1D 55 */	bl OSClearContext
/* 80037A40 000339C0  38 61 00 10 */	addi r3, r1, 0x10
/* 80037A44 000339C4  4B FF 1B 85 */	bl OSSetCurrentContext
/* 80037A48 000339C8  81 8D 86 28 */	lwz r12, __AIS_Callback@sda21(r13)
/* 80037A4C 000339CC  28 0C 00 00 */	cmplwi r12, 0x0
/* 80037A50 000339D0  41 82 00 14 */	beq .L_80037A64
/* 80037A54 000339D4  38 7F 6C 00 */	addi r3, r31, 0x6c00
/* 80037A58 000339D8  7D 88 03 A6 */	mtlr r12
/* 80037A5C 000339DC  80 63 00 08 */	lwz r3, 0x8(r3)
/* 80037A60 000339E0  4E 80 00 21 */	blrl
.L_80037A64:
/* 80037A64 000339E4  38 61 00 10 */	addi r3, r1, 0x10
/* 80037A68 000339E8  4B FF 1D 29 */	bl OSClearContext
/* 80037A6C 000339EC  7F C3 F3 78 */	mr r3, r30
/* 80037A70 000339F0  4B FF 1B 59 */	bl OSSetCurrentContext
/* 80037A74 000339F4  80 01 02 E4 */	lwz r0, 0x2e4(r1)
/* 80037A78 000339F8  83 E1 02 DC */	lwz r31, 0x2dc(r1)
/* 80037A7C 000339FC  83 C1 02 D8 */	lwz r30, 0x2d8(r1)
/* 80037A80 00033A00  7C 08 03 A6 */	mtlr r0
/* 80037A84 00033A04  38 21 02 E0 */	addi r1, r1, 0x2e0
/* 80037A88 00033A08  4E 80 00 20 */	blr
.endfn __AISHandler

.fn __AIDHandler, local
/* 80037A8C 00033A0C  7C 08 02 A6 */	mflr r0
/* 80037A90 00033A10  3C 60 CC 00 */	lis r3, 0xCC005000@ha
/* 80037A94 00033A14  90 01 00 04 */	stw r0, 0x4(r1)
/* 80037A98 00033A18  38 63 50 00 */	addi r3, r3, 0xCC005000@l
/* 80037A9C 00033A1C  38 00 FF 5F */	li r0, -0xa1
/* 80037AA0 00033A20  94 21 FD 20 */	stwu r1, -0x2e0(r1)
/* 80037AA4 00033A24  93 E1 02 DC */	stw r31, 0x2dc(r1)
/* 80037AA8 00033A28  3B E4 00 00 */	addi r31, r4, 0x0
/* 80037AAC 00033A2C  A0 A3 00 0A */	lhz r5, 0xa(r3)
/* 80037AB0 00033A30  7C A0 00 38 */	and r0, r5, r0
/* 80037AB4 00033A34  60 00 00 08 */	ori r0, r0, 0x8
/* 80037AB8 00033A38  B0 03 00 0A */	sth r0, 0xa(r3)
/* 80037ABC 00033A3C  38 61 00 10 */	addi r3, r1, 0x10
/* 80037AC0 00033A40  4B FF 1C D1 */	bl OSClearContext
/* 80037AC4 00033A44  38 61 00 10 */	addi r3, r1, 0x10
/* 80037AC8 00033A48  4B FF 1B 01 */	bl OSSetCurrentContext
/* 80037ACC 00033A4C  80 6D 86 2C */	lwz r3, __AID_Callback@sda21(r13)
/* 80037AD0 00033A50  28 03 00 00 */	cmplwi r3, 0x0
/* 80037AD4 00033A54  41 82 00 24 */	beq .L_80037AF8
/* 80037AD8 00033A58  80 0D 86 30 */	lwz r0, __CallbackStack@sda21(r13)
/* 80037ADC 00033A5C  28 00 00 00 */	cmplwi r0, 0x0
/* 80037AE0 00033A60  41 82 00 0C */	beq .L_80037AEC
/* 80037AE4 00033A64  48 00 00 39 */	bl __AICallbackStackSwitch
/* 80037AE8 00033A68  48 00 00 10 */	b .L_80037AF8
.L_80037AEC:
/* 80037AEC 00033A6C  39 83 00 00 */	addi r12, r3, 0x0
/* 80037AF0 00033A70  7D 88 03 A6 */	mtlr r12
/* 80037AF4 00033A74  4E 80 00 21 */	blrl
.L_80037AF8:
/* 80037AF8 00033A78  38 61 00 10 */	addi r3, r1, 0x10
/* 80037AFC 00033A7C  4B FF 1C 95 */	bl OSClearContext
/* 80037B00 00033A80  7F E3 FB 78 */	mr r3, r31
/* 80037B04 00033A84  4B FF 1A C5 */	bl OSSetCurrentContext
/* 80037B08 00033A88  80 01 02 E4 */	lwz r0, 0x2e4(r1)
/* 80037B0C 00033A8C  83 E1 02 DC */	lwz r31, 0x2dc(r1)
/* 80037B10 00033A90  38 21 02 E0 */	addi r1, r1, 0x2e0
/* 80037B14 00033A94  7C 08 03 A6 */	mtlr r0
/* 80037B18 00033A98  4E 80 00 20 */	blr
.endfn __AIDHandler

.fn __AICallbackStackSwitch, local
/* 80037B1C 00033A9C  7C 08 02 A6 */	mflr r0
/* 80037B20 00033AA0  90 01 00 04 */	stw r0, 0x4(r1)
/* 80037B24 00033AA4  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 80037B28 00033AA8  93 E1 00 14 */	stw r31, 0x14(r1)
/* 80037B2C 00033AAC  7C 7F 1B 78 */	mr r31, r3
/* 80037B30 00033AB0  3C A0 80 0B */	lis r5, __OldStack@ha
/* 80037B34 00033AB4  38 A5 90 B4 */	addi r5, r5, __OldStack@l
/* 80037B38 00033AB8  90 25 00 00 */	stw r1, 0x0(r5)
/* 80037B3C 00033ABC  3C A0 80 0B */	lis r5, __CallbackStack@ha
/* 80037B40 00033AC0  38 A5 90 B0 */	addi r5, r5, __CallbackStack@l
/* 80037B44 00033AC4  80 25 00 00 */	lwz r1, 0x0(r5)
/* 80037B48 00033AC8  38 21 FF F8 */	addi r1, r1, -0x8
/* 80037B4C 00033ACC  7F E8 03 A6 */	mtlr r31
/* 80037B50 00033AD0  4E 80 00 21 */	blrl
/* 80037B54 00033AD4  3C A0 80 0B */	lis r5, __OldStack@ha
/* 80037B58 00033AD8  38 A5 90 B4 */	addi r5, r5, __OldStack@l
/* 80037B5C 00033ADC  80 25 00 00 */	lwz r1, 0x0(r5)
/* 80037B60 00033AE0  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 80037B64 00033AE4  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 80037B68 00033AE8  38 21 00 18 */	addi r1, r1, 0x18
/* 80037B6C 00033AEC  7C 08 03 A6 */	mtlr r0
/* 80037B70 00033AF0  4E 80 00 20 */	blr
.endfn __AICallbackStackSwitch

.fn __AI_SRC_INIT, local
/* 80037B74 00033AF4  7C 08 02 A6 */	mflr r0
/* 80037B78 00033AF8  90 01 00 04 */	stw r0, 0x4(r1)
/* 80037B7C 00033AFC  94 21 FF D0 */	stwu r1, -0x30(r1)
/* 80037B80 00033B00  BF 41 00 18 */	stmw r26, 0x18(r1)
/* 80037B84 00033B04  38 80 00 00 */	li r4, 0x0
/* 80037B88 00033B08  38 60 00 00 */	li r3, 0x0
/* 80037B8C 00033B0C  38 00 00 00 */	li r0, 0x0
/* 80037B90 00033B10  3B 80 00 00 */	li r28, 0x0
/* 80037B94 00033B14  3B A0 00 00 */	li r29, 0x0
/* 80037B98 00033B18  48 00 00 04 */	b .L_80037B9C
.L_80037B9C:
/* 80037B9C 00033B1C  3F E0 CC 00 */	lis r31, 0xCC006C00@ha
/* 80037BA0 00033B20  48 00 00 04 */	b .L_80037BA4
.L_80037BA4:
/* 80037BA4 00033B24  48 00 01 64 */	b .L_80037D08
.L_80037BA8:
/* 80037BA8 00033B28  80 1F 6C 00 */	lwz r0, 0xCC006C00@l(r31)
/* 80037BAC 00033B2C  3B DF 6C 00 */	addi r30, r31, 0x6c00
/* 80037BB0 00033B30  3B DE 00 08 */	addi r30, r30, 0x8
/* 80037BB4 00033B34  54 00 06 F2 */	rlwinm r0, r0, 0, 27, 25
/* 80037BB8 00033B38  60 00 00 20 */	ori r0, r0, 0x20
/* 80037BBC 00033B3C  90 1F 6C 00 */	stw r0, 0x6c00(r31)
/* 80037BC0 00033B40  80 1F 6C 00 */	lwz r0, 0x6c00(r31)
/* 80037BC4 00033B44  54 00 07 FA */	rlwinm r0, r0, 0, 31, 29
/* 80037BC8 00033B48  90 1F 6C 00 */	stw r0, 0x6c00(r31)
/* 80037BCC 00033B4C  80 1F 6C 00 */	lwz r0, 0x6c00(r31)
/* 80037BD0 00033B50  54 00 00 3C */	clrrwi r0, r0, 1
/* 80037BD4 00033B54  60 00 00 01 */	ori r0, r0, 0x1
/* 80037BD8 00033B58  90 1F 6C 00 */	stw r0, 0x6c00(r31)
/* 80037BDC 00033B5C  80 7E 00 00 */	lwz r3, 0x0(r30)
/* 80037BE0 00033B60  48 00 00 04 */	b .L_80037BE4
.L_80037BE4:
/* 80037BE4 00033B64  48 00 00 04 */	b .L_80037BE8
.L_80037BE8:
/* 80037BE8 00033B68  80 1E 00 00 */	lwz r0, 0x0(r30)
/* 80037BEC 00033B6C  7C 03 00 40 */	cmplw r3, r0
/* 80037BF0 00033B70  41 82 FF F8 */	beq .L_80037BE8
/* 80037BF4 00033B74  4B FF 79 29 */	bl OSGetTime
/* 80037BF8 00033B78  80 1F 6C 00 */	lwz r0, 0x6c00(r31)
/* 80037BFC 00033B7C  7C 9A 23 78 */	mr r26, r4
/* 80037C00 00033B80  7C 7B 1B 78 */	mr r27, r3
/* 80037C04 00033B84  54 00 07 FA */	rlwinm r0, r0, 0, 31, 29
/* 80037C08 00033B88  60 00 00 02 */	ori r0, r0, 0x2
/* 80037C0C 00033B8C  90 1F 6C 00 */	stw r0, 0x6c00(r31)
/* 80037C10 00033B90  80 1F 6C 00 */	lwz r0, 0x6c00(r31)
/* 80037C14 00033B94  54 00 00 3C */	clrrwi r0, r0, 1
/* 80037C18 00033B98  60 00 00 01 */	ori r0, r0, 0x1
/* 80037C1C 00033B9C  90 1F 6C 00 */	stw r0, 0x6c00(r31)
/* 80037C20 00033BA0  80 7E 00 00 */	lwz r3, 0x0(r30)
/* 80037C24 00033BA4  48 00 00 04 */	b .L_80037C28
.L_80037C28:
/* 80037C28 00033BA8  48 00 00 04 */	b .L_80037C2C
.L_80037C2C:
/* 80037C2C 00033BAC  80 1E 00 00 */	lwz r0, 0x0(r30)
/* 80037C30 00033BB0  7C 03 00 40 */	cmplw r3, r0
/* 80037C34 00033BB4  41 82 FF F8 */	beq .L_80037C2C
/* 80037C38 00033BB8  4B FF 78 E5 */	bl OSGetTime
/* 80037C3C 00033BBC  7D 1A 20 10 */	subfc r8, r26, r4
/* 80037C40 00033BC0  81 8D 86 44 */	lwz r12, bound_32KHz+4@sda21(r13)
/* 80037C44 00033BC4  80 BF 6C 00 */	lwz r5, 0x6c00(r31)
/* 80037C48 00033BC8  7C FB 19 10 */	subfe r7, r27, r3
/* 80037C4C 00033BCC  81 4D 86 64 */	lwz r10, buffer+4@sda21(r13)
/* 80037C50 00033BD0  6C E7 80 00 */	xoris r7, r7, 0x8000
/* 80037C54 00033BD4  54 A5 07 FA */	rlwinm r5, r5, 0, 31, 29
/* 80037C58 00033BD8  81 6D 86 40 */	lwz r11, bound_32KHz@sda21(r13)
/* 80037C5C 00033BDC  7C CA 60 10 */	subfc r6, r10, r12
/* 80037C60 00033BE0  81 2D 86 60 */	lwz r9, buffer@sda21(r13)
/* 80037C64 00033BE4  90 BF 6C 00 */	stw r5, 0x6c00(r31)
/* 80037C68 00033BE8  7C 09 59 10 */	subfe r0, r9, r11
/* 80037C6C 00033BEC  6C 05 80 00 */	xoris r5, r0, 0x8000
/* 80037C70 00033BF0  7C 06 40 10 */	subfc r0, r6, r8
/* 80037C74 00033BF4  80 1F 6C 00 */	lwz r0, 0x6c00(r31)
/* 80037C78 00033BF8  7C A5 39 10 */	subfe r5, r5, r7
/* 80037C7C 00033BFC  7C A7 39 10 */	subfe r5, r7, r7
/* 80037C80 00033C00  7C A5 00 D0 */	neg r5, r5
/* 80037C84 00033C04  54 00 00 3C */	clrrwi r0, r0, 1
/* 80037C88 00033C08  2C 05 00 00 */	cmpwi r5, 0x0
/* 80037C8C 00033C0C  90 1F 6C 00 */	stw r0, 0x6c00(r31)
/* 80037C90 00033C10  41 82 00 14 */	beq .L_80037CA4
/* 80037C94 00033C14  83 AD 86 50 */	lwz r29, min_wait@sda21(r13)
/* 80037C98 00033C18  38 00 00 01 */	li r0, 0x1
/* 80037C9C 00033C1C  83 8D 86 54 */	lwz r28, min_wait+4@sda21(r13)
/* 80037CA0 00033C20  48 00 00 68 */	b .L_80037D08
.L_80037CA4:
/* 80037CA4 00033C24  7C CC 50 14 */	addc r6, r12, r10
/* 80037CA8 00033C28  7C 0B 49 14 */	adde r0, r11, r9
/* 80037CAC 00033C2C  6C 05 80 00 */	xoris r5, r0, 0x8000
/* 80037CB0 00033C30  7C 06 40 10 */	subfc r0, r6, r8
/* 80037CB4 00033C34  7C A5 39 10 */	subfe r5, r5, r7
/* 80037CB8 00033C38  7C A7 39 10 */	subfe r5, r7, r7
/* 80037CBC 00033C3C  7C A5 00 D0 */	neg r5, r5
/* 80037CC0 00033C40  2C 05 00 00 */	cmpwi r5, 0x0
/* 80037CC4 00033C44  40 82 00 40 */	bne .L_80037D04
/* 80037CC8 00033C48  80 AD 86 4C */	lwz r5, bound_48KHz+4@sda21(r13)
/* 80037CCC 00033C4C  80 0D 86 48 */	lwz r0, bound_48KHz@sda21(r13)
/* 80037CD0 00033C50  7C CA 28 10 */	subfc r6, r10, r5
/* 80037CD4 00033C54  7C 09 01 10 */	subfe r0, r9, r0
/* 80037CD8 00033C58  6C 05 80 00 */	xoris r5, r0, 0x8000
/* 80037CDC 00033C5C  7C 06 40 10 */	subfc r0, r6, r8
/* 80037CE0 00033C60  7C A5 39 10 */	subfe r5, r5, r7
/* 80037CE4 00033C64  7C A7 39 10 */	subfe r5, r7, r7
/* 80037CE8 00033C68  7C A5 00 D0 */	neg r5, r5
/* 80037CEC 00033C6C  2C 05 00 00 */	cmpwi r5, 0x0
/* 80037CF0 00033C70  41 82 00 14 */	beq .L_80037D04
/* 80037CF4 00033C74  83 AD 86 58 */	lwz r29, max_wait@sda21(r13)
/* 80037CF8 00033C78  38 00 00 01 */	li r0, 0x1
/* 80037CFC 00033C7C  83 8D 86 5C */	lwz r28, max_wait+4@sda21(r13)
/* 80037D00 00033C80  48 00 00 08 */	b .L_80037D08
.L_80037D04:
/* 80037D04 00033C84  38 00 00 00 */	li r0, 0x0
.L_80037D08:
/* 80037D08 00033C88  28 00 00 00 */	cmplwi r0, 0x0
/* 80037D0C 00033C8C  41 82 FE 9C */	beq .L_80037BA8
/* 80037D10 00033C90  7F 64 E0 14 */	addc r27, r4, r28
/* 80037D14 00033C94  7F 43 E9 14 */	adde r26, r3, r29
/* 80037D18 00033C98  48 00 00 04 */	b .L_80037D1C
.L_80037D1C:
/* 80037D1C 00033C9C  48 00 00 04 */	b .L_80037D20
.L_80037D20:
/* 80037D20 00033CA0  4B FF 77 FD */	bl OSGetTime
/* 80037D24 00033CA4  6C 65 80 00 */	xoris r5, r3, 0x8000
/* 80037D28 00033CA8  6F 43 80 00 */	xoris r3, r26, 0x8000
/* 80037D2C 00033CAC  7C 1B 20 10 */	subfc r0, r27, r4
/* 80037D30 00033CB0  7C 63 29 10 */	subfe r3, r3, r5
/* 80037D34 00033CB4  7C 65 29 10 */	subfe r3, r5, r5
/* 80037D38 00033CB8  7C 63 00 D0 */	neg r3, r3
/* 80037D3C 00033CBC  2C 03 00 00 */	cmpwi r3, 0x0
/* 80037D40 00033CC0  40 82 FF E0 */	bne .L_80037D20
/* 80037D44 00033CC4  BB 41 00 18 */	lmw r26, 0x18(r1)
/* 80037D48 00033CC8  80 01 00 34 */	lwz r0, 0x34(r1)
/* 80037D4C 00033CCC  38 21 00 30 */	addi r1, r1, 0x30
/* 80037D50 00033CD0  7C 08 03 A6 */	mtlr r0
/* 80037D54 00033CD4  4E 80 00 20 */	blr
.endfn __AI_SRC_INIT

.section .sbss, "", @nobits  # 0x800A8DC0 - 0x800A9380


__AIS_Callback:
	.skip 0x4

__AID_Callback:
	.skip 0x4

__CallbackStack:
	.skip 0x4

__OldStack:
	.skip 0x4

__AI_init_flag:
	.skip 0x4

.skip 4

bound_32KHz:
	.skip 0x8

bound_48KHz:
	.skip 0x8

min_wait:
	.skip 0x8

max_wait:
	.skip 0x8

buffer:
	.skip 0x8